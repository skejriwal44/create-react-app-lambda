{"ast":null,"code":"import React, { createContext, useState, useContext, useRef, useEffect, Component } from 'react';\nimport _$1 from 'lodash';\nimport { getLatestChats as getLatestChats$1, getLatestMessages as getLatestMessages$1, readMessage as readMessage$1, TextInput as TextInput$1, Button as Button$1, newChat as newChat$1, Avatar as Avatar$1, removePerson as removePerson$1, AutoCompleteInput, addPerson as addPerson$1, getOtherPeople as getOtherPeople$1, deleteChat as deleteChat$1, editChat as editChat$1, Dot as Dot$1, isTyping as isTyping$1, sendMessage as sendMessage$1, getChat as getChat$1 } from 'react-chat-engine';\nimport { WebSocket } from 'nextjs-websocket';\nimport axios from 'axios';\nimport { SyncOutlined, MenuOutlined, CloseOutlined, LeftOutlined, DownOutlined, SettingOutlined, LoadingOutlined, CloseCircleTwoTone, PaperClipOutlined, PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons';\nimport { setConfiguration, Row, Col } from 'react-grid-system';\nimport { animateScroll } from 'react-scroll';\nvar ChatEngineContext = createContext();\n\nvar ChatEngineWrapper = function ChatEngineWrapper(props) {\n  var _useState = useState(true),\n      connecting = _useState[0],\n      setConnecting = _useState[1];\n\n  var _useState2 = useState(null),\n      conn = _useState2[0],\n      setConn = _useState2[1];\n\n  var _useState3 = useState(null),\n      creds = _useState3[0],\n      setCreds = _useState3[1];\n\n  var _useState4 = useState(null),\n      chats = _useState4[0],\n      setChats = _useState4[1];\n\n  var _useState5 = useState({}),\n      messages = _useState5[0],\n      setMessages = _useState5[1];\n\n  var _useState6 = useState({}),\n      sendingMessages = _useState6[0],\n      setSendingMessages = _useState6[1];\n\n  var _useState7 = useState(null),\n      activeChat = _useState7[0],\n      setActiveChat = _useState7[1];\n\n  var _useState8 = useState({}),\n      typingCounter = _useState8[0],\n      setTypingCounter = _useState8[1];\n\n  var _useState9 = useState(false),\n      loadMoreMessages = _useState9[0],\n      setLoadMoreMessages = _useState9[1];\n\n  var _useState10 = useState(false),\n      isBottomVisible = _useState10[0],\n      setIsBottomVisible = _useState10[1];\n\n  var value = {\n    connecting: connecting,\n    setConnecting: setConnecting,\n    conn: conn,\n    setConn: setConn,\n    creds: creds,\n    setCreds: setCreds,\n    chats: chats,\n    setChats: setChats,\n    messages: messages,\n    setMessages: setMessages,\n    sendingMessages: sendingMessages,\n    setSendingMessages: setSendingMessages,\n    activeChat: activeChat,\n    setActiveChat: setActiveChat,\n    typingCounter: typingCounter,\n    setTypingCounter: setTypingCounter,\n    loadMoreMessages: loadMoreMessages,\n    setLoadMoreMessages: setLoadMoreMessages,\n    isBottomVisible: isBottomVisible,\n    setIsBottomVisible: setIsBottomVisible\n  };\n  return /*#__PURE__*/React.createElement(ChatEngineContext.Provider, {\n    value: value\n  }, props.children);\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar _this = undefined;\n\nvar Socket = function Socket(props) {\n  var _useState = useState(Date.now() + 10000),\n      reconnect = _useState[0];\n\n  var _useContext = useContext(ChatEngineContext),\n      setConnecting = _useContext.setConnecting,\n      conn = _useContext.conn,\n      setConn = _useContext.setConn,\n      setCreds = _useContext.setCreds,\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      messages = _useContext.messages,\n      setMessages = _useContext.setMessages,\n      sendingMessages = _useContext.sendingMessages,\n      setSendingMessages = _useContext.setSendingMessages,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat,\n      typingCounter = _useContext.typingCounter,\n      setTypingCounter = _useContext.setTypingCounter;\n\n  function sortChats(chats) {\n    return Object.values(chats).sort(function (a, b) {\n      var aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created);\n      var bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created);\n      return new Date(bDate) - new Date(aDate);\n    });\n  }\n\n  function onEditChat(chat) {\n    if (chats) {\n      var newChats = _extends({}, chats);\n\n      newChats[chat.id] = chat;\n      setChats(newChats);\n    }\n\n    props.onEditChat && props.onEditChat(chat);\n  }\n\n  function onConnect(conn) {\n    setConn(conn);\n    setCreds(conn);\n    setConnecting(false);\n    getLatestChats$1(conn, 25, function (chats) {\n      return setChats(_.mapKeys(chats, 'id'));\n    });\n\n    if (Date.now() > reconnect) {\n      getLatestMessages$1(conn, activeChat, 45, function (id, list) {\n        setMessages(_extends({}, messages, _.mapKeys(list, 'id')));\n      });\n    }\n\n    props.onConnect && props.onConnect(conn);\n  }\n\n  function handleEvent(event) {\n    var eventJSON = JSON.parse(event);\n\n    if (eventJSON.action === 'login_error') {\n      console.log(\"Your login credentials were not correct: \\n\\n                Project ID: \" + props.projectID + \" \\n\\n                Username: \" + props.userName + \" \\n\\n                User Secret: \" + props.userSecret + \"\\n\\n                Double check these credentials to make sure they're correct.\\n\\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.\");\n      setConn(undefined);\n      setCreds(undefined);\n      props.onFailAuth && props.onFailAuth(conn);\n    } else if (eventJSON.action === 'new_chat') {\n      var chat = eventJSON.data;\n\n      if (chats) {\n        var newChats = _extends({}, chats);\n\n        newChats[chat.id] = chat;\n        setChats(newChats);\n        setActiveChat(chat.id);\n      }\n\n      props.onNewChat && props.onNewChat(eventJSON.data);\n    } else if (eventJSON.action === 'edit_chat') {\n      onEditChat(eventJSON.data);\n    } else if (eventJSON.action === 'delete_chat') {\n      var _chat = eventJSON.data;\n\n      if (chats) {\n        chats[_chat.id] = undefined;\n        setChats(chats);\n\n        if (!_.isEmpty(chats)) {\n          var sortedChats = sortChats(chats);\n          setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0);\n        }\n      }\n\n      props.onDeleteChat && props.onDeleteChat(_chat);\n    } else if (eventJSON.action === 'add_person') {\n      onEditChat(eventJSON.data);\n      props.onAddPerson && props.onAddPerson(eventJSON.data);\n    } else if (eventJSON.action === 'remove_person') {\n      onEditChat(eventJSON.data);\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data);\n    } else if (eventJSON.action === 'new_message') {\n      var _eventJSON$data = eventJSON.data,\n          id = _eventJSON$data.id,\n          message = _eventJSON$data.message;\n\n      if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n        sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined;\n        setSendingMessages(sendingMessages);\n      }\n\n      if (id === activeChat) {\n        var newMessages = _extends({}, messages);\n\n        newMessages[message.id] = message;\n        setMessages(newMessages);\n      }\n\n      if (message.sender_username !== props.userName) {\n        readMessage$1(conn, activeChat, message.id, function (chat) {\n          return onEditChat(chat);\n        });\n      }\n\n      props.onNewMessage && props.onNewMessage(id, message);\n    } else if (eventJSON.action === 'edit_message') {\n      var _eventJSON$data2 = eventJSON.data,\n          _id = _eventJSON$data2.id,\n          _message = _eventJSON$data2.message;\n\n      if (_id === activeChat) {\n        messages[_message.id] = _message;\n        setMessages(messages);\n      }\n\n      props.onEditMessage && props.onEditMessage(_id, _message);\n    } else if (eventJSON.action === 'delete_message') {\n      var _eventJSON$data3 = eventJSON.data,\n          _id2 = _eventJSON$data3.id,\n          _message2 = _eventJSON$data3.message;\n\n      if (_id2 === activeChat) {\n        messages[_message2.id] = undefined;\n        setMessages(messages);\n      }\n\n      props.onDeleteMessage && props.onDeleteMessage(_id2, _message2);\n    } else if (eventJSON.action === 'is_typing') {\n      var _extends2, _extends3;\n\n      var _eventJSON$data4 = eventJSON.data,\n          _id3 = _eventJSON$data4.id,\n          person = _eventJSON$data4.person;\n\n      var newTypingCounter = _extends({}, typingCounter);\n\n      newTypingCounter = _extends({}, newTypingCounter, (_extends3 = {}, _extends3[_id3] = _extends({}, newTypingCounter[_id3], (_extends2 = {}, _extends2[person] = Date.now(), _extends2)), _extends3));\n      setTypingCounter(newTypingCounter);\n      props.onTyping && props.onTyping(_id3, person);\n    }\n  }\n\n  function onClose() {\n    setConnecting(true);\n  }\n\n  var development = props.development,\n      publicKey = props.publicKey,\n      projectID = props.projectID,\n      userName = props.userName,\n      userPassword = props.userPassword,\n      userSecret = props.userSecret;\n  var wsStart = development ? 'ws://' : 'wss://';\n  var rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io';\n  var project = publicKey ? publicKey : projectID;\n  var secret = userPassword ? userPassword : userSecret;\n  return /*#__PURE__*/React.createElement(WebSocket, {\n    url: \"\" + wsStart + rootHost + \"/person/?publicKey=\" + project + \"&username=\" + userName + \"&secret=\" + secret,\n    onOpen: function onOpen() {\n      return onConnect(props);\n    },\n    onClose: onClose.bind(_this),\n    onMessage: handleEvent.bind(_this),\n    reconnectIntervalInMilliSeconds: 3000\n  });\n};\n\nfunction getApiUrl(props) {\n  if (props && props.development) {\n    return 'http://127.0.0.1:8000';\n  }\n\n  return 'https://api.chatengine.io';\n}\n\nfunction getHeaders(props) {\n  if (props.chatID) {\n    return {\n      \"public-key\": props.publicKey ? props.publicKey : props.projectID,\n      \"chat-id\": props.chatID,\n      \"access-key\": props.chatAccessKey\n    };\n  }\n\n  return {\n    \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n    \"User-Name\": props.userName,\n    \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret\n  };\n}\n\nfunction getChats(props, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetChats && props.onGetChats(response.data);\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Chats Error', error);\n  });\n}\n\nfunction newChat(props, data, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('New Chat Error', error);\n  });\n}\n\nfunction getLatestChats(props, count, callback) {\n  axios.get(getApiUrl(props) + \"/chats/latest/\" + count + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetChats && props.onGetChats(response.data);\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Chats Error', error);\n  });\n}\n\nfunction getOrCreateChat(props, data, callback) {\n  axios.put(getApiUrl(props) + \"/chats/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Get or Create Chat Error', error);\n  });\n}\n\nfunction getChat(props, chatId, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Get Chat Error', error);\n  });\n}\n\nfunction editChat(props, chatId, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Edit Chat Error', error);\n  });\n}\n\nfunction deleteChat(props, chatId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Chat Error', error);\n  });\n}\n\nvar ChatLoader = function ChatLoader(props) {\n  function useOnScreen(ref) {\n    var _useState = useState(false),\n        isIntersecting = _useState[0],\n        setIntersecting = _useState[1];\n\n    var observer = new IntersectionObserver(function (_ref) {\n      var entry = _ref[0];\n      setIntersecting(entry.isIntersecting);\n\n      if (entry.isIntersecting) {\n        props.onVisible();\n      }\n    });\n    useEffect(function () {\n      observer.observe(ref.current);\n      return function () {\n        observer.disconnect();\n      };\n    }, []);\n    return isIntersecting;\n  }\n\n  var ref = useRef();\n  var isVisible = useOnScreen(ref);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  });\n};\n\nvar _this$1 = undefined;\n\nvar NewChatForm = function NewChatForm() {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn;\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(false),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  function _handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (value.trim().length > 0) {\n      newChat$1(conn, {\n        title: value\n      }, function () {\n        return setSelected(false);\n      });\n    }\n\n    setValue('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.newChatContainer,\n    className: \"ce-chat-form-container\"\n  }, selected ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit.bind(_this$1)\n  }, /*#__PURE__*/React.createElement(TextInput$1, {\n    autoFocus: true,\n    label: \"Chat Title\",\n    value: value,\n    id: \"ce-new-chat-title-field\",\n    onBlur: function onBlur() {\n      return setSelected(false);\n    },\n    style: {\n      width: '100%'\n    },\n    handleChange: function handleChange(e) {\n      return _handleChange(e);\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '0px'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: '600',\n      fontSize: '24px',\n      position: 'relative',\n      top: '4px',\n      width: ' calc(100% - 48px)'\n    }\n  }, \"My Chats\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'right'\n    }\n  }, /*#__PURE__*/React.createElement(Button$1, {\n    icon: \"plus\",\n    id: \"new-chat-plus-button\",\n    onClick: function onClick() {\n      return setSelected(true);\n    }\n  }))));\n};\n\nvar styles = {\n  newChatContainer: {\n    padding: '16px 14px',\n    backgroundColor: 'white'\n  }\n};\n\nfunction timeSinceDate(date) {\n  if (!date) return '';\n  var day = date.substr(8, 2);\n  var month = date.substr(5, 2);\n  var year = date.substr(0, 4);\n  var hour = date.substr(11, 2);\n  var minute = date.substr(14, 2);\n  var second = date.substr(17, 2);\n  var sent = new Date(month + \" \" + day + \" \" + year);\n  sent.setHours(hour);\n  sent.setMinutes(minute);\n  sent.setSeconds(second);\n  sent = sent.toString();\n  var dayStr = sent.substr(0, 10);\n  var timeStr = sent.substr(15, 6);\n  return dayStr + \" at \" + timeStr;\n}\n\nfunction daySinceSent(date) {\n  if (!date) return '';\n  var day = date.substr(8, 2);\n  var month = date.substr(5, 2);\n  var year = date.substr(0, 4);\n  var sent = new Date(month + \" \" + day + \" \" + year).toString();\n  return sent.substr(4, 6);\n}\n\nvar ChatCard = function ChatCard(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat;\n\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n\n  function readLastMessage(chat) {\n    var readLastMessage = true;\n    chat.people.map(function (chat_person) {\n      if (conn.userName === chat_person.person.username) {\n        readLastMessage = chat.last_message.id === chat_person.last_read;\n      }\n    });\n    return readLastMessage;\n  }\n\n  var chat = props.chat;\n  var extraStyle = activeChat === chat.id ? styles$1.activeChat : {};\n  var otherPerson = chat.people.find(function (person) {\n    return person.person.username !== conn.userName;\n  });\n  var title = chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title;\n  var lastMessage = chat.last_message.text;\n\n  if (!lastMessage) {\n    lastMessage = chat.last_message.attachments.length > 0 ? chat.last_message.attachments.length + \" image\" + (chat.last_message.attachments.length > 1 ? 's' : '') : 'Say hello!';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return setActiveChat(chat.id);\n    },\n    style: _extends({}, styles$1.chatContainer, extraStyle),\n    className: \"ce-chat-card \" + (activeChat === chat.id && 'ce-active-chat-card')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$1.titleText,\n    className: \"ce-chat-title-text\",\n    id: \"ce-chat-card-title-\" + title\n  }, title, !readLastMessage(chat) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-unread-dot\",\n    style: {\n      \"float\": 'right',\n      width: '12px',\n      height: '12px',\n      borderRadius: '6px',\n      backgroundColor: '#1890ff',\n      display: 'inline-block'\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    className: \"ce-chat-subtitle\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$1.messageText,\n    className: \"ce-chat-subtitle-text ce-chat-subtitle-message\"\n  }, lastMessage), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-subtitle-text ce-chat-subtitle-date\",\n    style: _extends({}, styles$1.messageText, {\n      textAlign: 'right',\n      width: '25%'\n    })\n  }, daySinceSent(chat.last_message.created))));\n};\n\nvar styles$1 = {\n  chatContainer: {\n    padding: '16px',\n    paddingBottom: '12px',\n    cursor: 'pointer'\n  },\n  titleText: {\n    fontWeight: '500',\n    paddingBottom: '4px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  messageText: {\n    width: '75%',\n    color: 'rgba(153, 153, 153, 1)',\n    fontSize: '14px',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    display: 'inline-block'\n  },\n  activeChat: {\n    backgroundColor: '#d9d9d9',\n    border: '4px solid white',\n    borderRadius: '12px'\n  }\n};\nvar count = 25;\nvar interval = 25;\n\nvar ChatList = function ChatList(props) {\n  var didMountRef = useRef(false);\n\n  var _useState = useState(true),\n      hasMoreChats = _useState[0],\n      setHasMoreChats = _useState[1];\n\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat;\n\n  function renderChats(chats) {\n    return chats.map(function (chat, index) {\n      if (!chat) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"chat_\" + index\n        });\n      } else if (props.renderChatCard) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"chat_\" + index\n        }, props.renderChatCard(chat, index));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"chat_\" + index,\n          onClick: function onClick() {\n            return props.onChatClick && props.onChatClick();\n          }\n        }, /*#__PURE__*/React.createElement(ChatCard, {\n          chat: chat\n        }));\n      }\n    });\n  }\n\n  function sortChats(chats) {\n    return chats.sort(function (a, b) {\n      var aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created);\n      var bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created);\n      return new Date(bDate) - new Date(aDate);\n    });\n  }\n\n  function onGetChats(chats, count) {\n    var chatList = sortChats(chats);\n\n    if (chatList.length > 0 && activeChat === null) {\n      setActiveChat(chatList[0].id);\n    }\n\n    if (count && count > chatList.length) {\n      setHasMoreChats(false);\n    }\n\n    var newChats = _extends({}, chats);\n\n    setChats(_$1.mapKeys(newChats, 'id'));\n  }\n\n  useEffect(function () {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      getLatestChats(props, interval, function (chats) {\n        return onGetChats(chats);\n      });\n    }\n  });\n\n  function loadChats() {\n    count = count + interval;\n    getLatestChats(props, count, function (chats) {\n      return onGetChats(chats, count);\n    });\n  }\n\n  var chatList = sortChats(chats ? Object.values(chats) : []);\n  if (props.renderChatList) return props.renderChatList(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$2.chatListContainer,\n    className: \"ce-chat-list\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$2.chatsContainer,\n    className: \"ce-chats-container\"\n  }, props.renderNewChatForm ? props.renderNewChatForm(conn) : /*#__PURE__*/React.createElement(NewChatForm, null), renderChats(chatList), hasMoreChats && chatList.length > 0 && /*#__PURE__*/React.createElement(ChatLoader, {\n    onVisible: function onVisible() {\n      return loadChats();\n    }\n  })));\n};\n\nvar styles$2 = {\n  chatListContainer: {\n    height: '100%',\n    maxHeight: '100vh',\n    overflow: 'scroll',\n    overflowX: 'hidden',\n    borderRight: '1px solid #afafaf',\n    backgroundColor: 'white',\n    fontFamily: 'Avenir'\n  },\n  chatsContainer: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    borderRadius: '0px 0px 24px 24px'\n  }\n};\n\nfunction getMessages(props, chatId, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetMessages && props.onGetMessages(chatId, response.data);\n    callback && callback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Messages Error', error);\n  });\n}\n\nfunction getLatestMessages(props, chatId, count, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/latest/\" + count + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetMessages && props.onGetMessages(chatId, response.data);\n    callback && callback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Latest Messages Error', error);\n  });\n}\n\nfunction sendMessage(props, chatId, data, callback) {\n  var formdata = new FormData();\n\n  if (data.attachments) {\n    for (var i = 0; i < data.attachments.length; i++) {\n      formdata.append('attachments', data.attachments[i], data.attachments[i].name);\n    }\n  } else if (data.files) {\n    for (var _i = 0; _i < data.files.length; _i++) {\n      formdata.append('attachments', data.files[_i], data.files[_i].name);\n    }\n  }\n\n  formdata.append('text', data.text);\n  formdata.append('sender_username', data.sender_username);\n  formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}));\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\", formdata, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Send Messages Error', error);\n  });\n  console.log(\"Message has been sent here\");\n}\n\nfunction getMessage(props, chatId, messageId, callback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\" + messageId + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Message Error', error);\n  });\n}\n\nfunction editMessage(props, chatId, messageId, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\" + messageId + \"/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Messages Error', error);\n  });\n}\n\nfunction readMessage(props, chatId, messageId, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    last_read: messageId\n  }, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Read Message Error', error);\n  });\n}\n\nfunction deleteMessage(props, chatId, messageId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/messages/\" + messageId + \"/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Messages Error', error);\n  });\n}\n\nvar AuthFail = function AuthFail() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '40%',\n      paddingTop: '25vh'\n    },\n    src: \"https://chat-engine-assets.s3.amazonaws.com/denied.svg\",\n    alt: \"welcome-to-chat-engine\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '18px',\n      paddingTop: '24px',\n      width: '75%',\n      paddingLeft: '12.5%'\n    }\n  }, \"Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://chatengine.io\"\n  }, \"chatengine.io\")));\n};\n\nvar Welcome = function Welcome() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      textAlign: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '60%',\n      paddingTop: '33vh'\n    },\n    src: \"https://chat-engine-assets.s3.amazonaws.com/welcome.svg\",\n    alt: \"welcome-to-chat-engine\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '18px',\n      paddingTop: '24px',\n      width: '75%',\n      paddingLeft: '12.5%'\n    }\n  }, \"Fill out the \\\"New Chat\\\" form to get started.\"));\n};\n\nvar ConnectionBar = function ConnectionBar() {\n  var _useContext = useContext(ChatEngineContext),\n      connecting = _useContext.connecting;\n\n  if (!connecting) return /*#__PURE__*/React.createElement(\"div\", null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      zIndex: '1',\n      bottom: '66px',\n      left: 'calc(50% - 78px)',\n      position: 'absolute',\n      fontSize: '15px',\n      padding: '10px 22px',\n      color: 'white',\n      backgroundColor: '#fa8c16',\n      borderRadius: '1.3em'\n    },\n    id: \"ce-connecting-popup\"\n  }, /*#__PURE__*/React.createElement(SyncOutlined, {\n    spin: true\n  }), ' ', \"Connecting\");\n};\n\nvar ChatListDrawer = function ChatListDrawer(props) {\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(MenuOutlined, {\n    onClick: function onClick() {\n      return setIsOpen(true);\n    },\n    style: {\n      color: 'rgb(24, 144, 255)',\n      outline: 'none'\n    }\n  }), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$3.drawerContainer\n  }, /*#__PURE__*/React.createElement(CloseOutlined, {\n    style: styles$3.closeIcon,\n    onClick: function onClick() {\n      return setIsOpen(false);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$3.titleContainer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$3.titleText\n  }, \"My Chats\")), /*#__PURE__*/React.createElement(ChatList, _extends({}, props, {\n    onChatClick: function onChatClick() {\n      return setIsOpen(false);\n    }\n  }))));\n};\n\nvar styles$3 = {\n  drawerContainer: {\n    position: 'fixed',\n    zIndex: '1',\n    top: '0px',\n    left: '0px',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    textAlign: 'left'\n  },\n  closeIcon: {\n    position: 'absolute',\n    left: '28px',\n    top: '32px'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '24px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  }\n};\n\nvar Person = function Person(props) {\n  var _useState = useState(false),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var person = props.person,\n      chat = props.chat,\n      conn = props.conn;\n\n  if (!person || !chat) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n\n  function onRemovePerson() {\n    removePerson$1(props.conn, props.chat.id, props.person.username);\n  }\n\n  function renderPersonText(person) {\n    if (person.first_name && person.first_name !== null) {\n      return \"\" + person.first_name + (person.last_name ? \" \" + person.last_name : '');\n    } else {\n      return person.username;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-person-container\",\n    onMouseEnter: function onMouseEnter() {\n      return setSelected(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setSelected(false);\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-person-avatar\",\n    style: {\n      padding: '2px',\n      height: '0px'\n    }\n  }, /*#__PURE__*/React.createElement(Avatar$1, {\n    avatar: person.avatar,\n    username: person.username,\n    is_online: person.is_online\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-person-text\",\n    style: {\n      paddingLeft: '52px',\n      height: '44px',\n      position: 'relative',\n      top: '10px',\n      fontSize: '15px'\n    }\n  }, renderPersonText(person)), selected && conn.userName === chat.admin.username && person.username !== chat.admin.username && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-delete-chat\",\n    style: {\n      \"float\": 'right',\n      height: '0px',\n      position: 'relative',\n      bottom: '44px'\n    }\n  }, /*#__PURE__*/React.createElement(Button$1, {\n    theme: \"danger\",\n    icon: \"delete\",\n    onClick: function onClick() {\n      return onRemovePerson();\n    }\n  })));\n};\n\nvar Option = function Option(props) {\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var _props$person = props.person,\n      avatar = _props$person.avatar,\n      username = _props$person.username;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ce-username-option-\" + username,\n    onMouseEnter: function onMouseEnter() {\n      return setFocused(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setFocused(false);\n    },\n    onClick: function onClick() {\n      return props.onClick && props.onClick();\n    },\n    style: _extends({}, styles$4.option, {\n      backgroundColor: focused ? '#f5f5f5' : 'white'\n    })\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Avatar$1, {\n    username: username,\n    avatar: avatar\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '12px 4px'\n    }\n  }, props.person.username));\n};\n\nvar styles$4 = {\n  option: {\n    padding: '4px 16px',\n    cursor: 'pointer',\n    fontSize: '15px',\n    display: 'flex'\n  }\n};\n\nvar PersonForm = function PersonForm(props) {\n  var _useState = useState({\n    value: '',\n    others: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function _handleChange(value) {\n    setState(_extends({}, state, {\n      value: value\n    }));\n  }\n\n  function invitePerson(name) {\n    addPerson$1(props.conn, props.chat.id, name, function () {\n      setState(_extends({}, state, {\n        value: ''\n      }));\n      getOthers();\n    });\n  }\n\n  function getOthers() {\n    getOtherPeople$1(props.conn, props.chat.id, function (id, others) {\n      return setState(_extends({}, state, {\n        others: others\n      }));\n    }, function () {});\n  }\n\n  function _renderOption(option) {\n    return /*#__PURE__*/React.createElement(Option, {\n      person: option,\n      onClick: function onClick() {\n        return invitePerson(option.username);\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '12px'\n    }\n  }, /*#__PURE__*/React.createElement(AutoCompleteInput, {\n    style: {\n      width: '100%'\n    },\n    label: \"Type a username\",\n    value: state.value,\n    options: state.others,\n    onFocus: function onFocus() {\n      return getOthers();\n    },\n    handleChange: function handleChange(value) {\n      return _handleChange(value);\n    },\n    renderOption: function renderOption(option) {\n      return _renderOption(option);\n    }\n  }));\n};\n\nvar PeopleSettings = function PeopleSettings(props) {\n  var _useState = useState({\n    collapsed: false,\n    hovered: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var chat = props.chat;\n\n  if (chat.is_direct_chat) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  function renderChatPeople(people, chat) {\n    return people.map(function (chatPerson, index) {\n      return /*#__PURE__*/React.createElement(Person, {\n        key: \"person_\" + index,\n        person: chatPerson.person,\n        conn: props,\n        chat: chat\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    onClick: function onClick() {\n      return setState(_extends({}, state, {\n        collapsed: !state.collapsed\n      }));\n    },\n    style: state.hovered ? {\n      backgroundColor: '#f0f0f0',\n      cursor: 'pointer'\n    } : {},\n    className: \"ce-section-title-container ce-person-title-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-section-title ce-people-title\",\n    style: {\n      fontSize: '17px',\n      padding: '12px',\n      fontWeight: '600'\n    }\n  }, \"People\"), state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n    style: styles$5.collapseIcon\n  }) : /*#__PURE__*/React.createElement(DownOutlined, {\n    style: styles$5.collapseIcon\n  })), !state.collapsed && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), renderChatPeople(chat.people, chat), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), props && chat && props.userName === chat.admin.username && /*#__PURE__*/React.createElement(PersonForm, {\n    conn: props,\n    chat: chat\n  })));\n};\n\nvar styles$5 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar Thumbnail = function Thumbnail(props) {\n  var attachment = props.attachment;\n\n  if (!attachment) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$6.container,\n    className: \"ce-photo-thumbnail\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '100%'\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    alt: attachment.id,\n    style: styles$6.image,\n    src: attachment.file,\n    className: \"ce-photo-img\",\n    id: \"image-\" + attachment.id\n  }));\n};\n\nvar styles$6 = {\n  container: {\n    position: 'relative',\n    width: 'calc(33% - 8px)',\n    border: '1px solid white',\n    display: 'inline-block',\n    cursor: 'pointer'\n  },\n  image: {\n    top: '0px',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    objectFit: 'cover'\n  }\n};\n\nvar PhotosSettings = function PhotosSettings(props) {\n  var _useState = useState({\n    collapsed: true,\n    hovered: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var chat = props.chat;\n\n  function renderPhotos(attachments) {\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail, {\n        key: \"person_\" + index,\n        attachment: attachment\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    },\n    className: \"ce-photo-section\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    onClick: function onClick() {\n      return setState(_extends({}, state, {\n        collapsed: !state.collapsed\n      }));\n    },\n    style: state.hovered ? {\n      backgroundColor: '#f0f0f0',\n      cursor: 'pointer'\n    } : {},\n    className: \"ce-section-title-container ce-photo-title-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-section-title ce-photo-title\",\n    style: {\n      fontSize: '17px',\n      padding: '12px',\n      fontWeight: '600'\n    }\n  }, \"Photos\"), state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n    style: styles$7.collapseIcon\n  }) : /*#__PURE__*/React.createElement(DownOutlined, {\n    style: styles$7.collapseIcon\n  })), !state.collapsed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-photo-feed\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), renderPhotos(chat.attachments)));\n};\n\nvar styles$7 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar OptionsSettings = function OptionsSettings(props) {\n  var _useState = useState({\n    collapsed: true,\n    hovered: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var chat = props.chat;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ce-options-drop-down\",\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    onClick: function onClick() {\n      return setState(_extends({}, state, {\n        collapsed: !state.collapsed\n      }));\n    },\n    style: state.hovered ? {\n      backgroundColor: '#f0f0f0',\n      cursor: 'pointer'\n    } : {}\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '17px',\n      padding: '12px',\n      fontWeight: '600'\n    }\n  }, \"Options\"), state.collapsed ? /*#__PURE__*/React.createElement(LeftOutlined, {\n    style: styles$8.collapseIcon\n  }) : /*#__PURE__*/React.createElement(DownOutlined, {\n    style: styles$8.collapseIcon\n  })), !state.collapsed && /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '12px'\n    }\n  }), /*#__PURE__*/React.createElement(Button$1, {\n    value: \"Delete\",\n    theme: \"danger\",\n    icon: \"delete\",\n    id: \"ce-delete-chat-button\",\n    onClick: function onClick() {\n      return deleteChat$1(props, chat.id, function (data) {});\n    },\n    style: {\n      width: '100%',\n      marginBottom: '12px'\n    }\n  })));\n};\n\nvar styles$8 = {\n  collapseIcon: {\n    \"float\": 'right',\n    position: 'relative',\n    bottom: '30px',\n    right: '12px'\n  }\n};\n\nvar NewMessageForm = function NewMessageForm(props) {\n  var didMountRef = useRef(false);\n\n  var _useState = useState({\n    activeChat: null,\n    value: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function _handleChange(event) {\n    setState(_extends({}, state, {\n      value: event.target.value\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    editChat$1(props.conn, props.chat.id, {\n      title: state.value\n    }, function (data) {});\n  }\n\n  useEffect(function () {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n    } else {\n      if (state.activeChat !== props.chat.id) {\n        setState(_extends({}, state, {\n          value: props.chat.title,\n          activeChat: props.chat.id\n        }));\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    className: \"ce-chat-title-form\"\n  }, /*#__PURE__*/React.createElement(TextInput$1, {\n    label: \"Rename this Chat\",\n    value: state.value,\n    \"default\": props.chat.title,\n    handleChange: function handleChange(e) {\n      return _handleChange(e);\n    },\n    style: {\n      fontSize: '16px',\n      fontWeight: '600',\n      textAlign: 'center',\n      border: '0px solid white',\n      width: '100%'\n    }\n  }));\n};\n\nvar ChatSettingsTop = function ChatSettingsTop(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn;\n\n  var chat = props.chat;\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n  var topPeople = chat.people.slice(0, 3);\n  var otherPerson = getOtherPerson(chat.people);\n\n  function renderOnePerson(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })));\n  }\n\n  function renderTwoPeople(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 15px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 44px - 22px + 15px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[1].person.username,\n      avatar: people[1].person.avatar\n    })));\n  }\n\n  function renderThreePeople(people) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        paddingTop: '14px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 24px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[0].person.username,\n      avatar: people[0].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 24px - 44px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[1].person.username,\n      avatar: people[1].person.avatar\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": 'left',\n        position: 'relative',\n        left: 'calc(50% - 22px - 44px - 44px + 24px)'\n      }\n    }, /*#__PURE__*/React.createElement(Avatar$1, {\n      show_online: false,\n      username: people[2].person.username,\n      avatar: people[2].person.avatar\n    })));\n  }\n\n  function getOtherPerson(people) {\n    return people.find(function (person) {\n      return person.person.username !== conn.userName;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-settings-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-avatars-row\"\n  }, topPeople.length === 1 && renderOnePerson(topPeople), chat.is_direct_chat && otherPerson && renderOnePerson([otherPerson]), !chat.is_direct_chat && otherPerson && topPeople.length === 2 && renderTwoPeople(topPeople), !chat.is_direct_chat && otherPerson && topPeople.length === 3 && renderThreePeople(topPeople)), chat.is_direct_chat && otherPerson ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '55px',\n      paddingBottom: '7px',\n      fontSize: '16px',\n      fontWeight: '600',\n      textAlign: 'center',\n      border: '0px solid white',\n      width: '100%'\n    }\n  }, otherPerson.person.username) : /*#__PURE__*/React.createElement(NewMessageForm, {\n    chat: chat,\n    conn: conn\n  }));\n};\n\nvar ChatSettings = function ChatSettings(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      activeChat = _useContext.activeChat;\n\n  var chat = chats && chats[activeChat];\n  if (props.renderChatSettings) return props.renderChatSettings(props);\n  if (!chat) return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$9.filler\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$9.settingsContainer,\n    className: \"ce-settings\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '90%',\n      paddingLeft: '5%'\n    },\n    className: \"ce-settings-container\"\n  }, props.renderChatSettingsTop ? props.renderChatSettingsTop(conn, chat) : /*#__PURE__*/React.createElement(ChatSettingsTop, _extends({}, props, {\n    chat: chat\n  })), props.renderPeopleSettings ? props.renderPeopleSettings(conn, chat) : /*#__PURE__*/React.createElement(PeopleSettings, _extends({}, props, {\n    chat: chat\n  })), props.renderPhotosSettings ? props.renderPhotosSettings(chat) : /*#__PURE__*/React.createElement(PhotosSettings, _extends({}, props, {\n    chat: chat\n  })), props && chat && props.userName === chat.admin.username && /*#__PURE__*/React.createElement(\"div\", null, props.renderOptionsSettings ? props.renderOptionsSettings(conn, chat) : /*#__PURE__*/React.createElement(OptionsSettings, _extends({}, props, {\n    chat: chat\n  })))));\n};\n\nvar styles$9 = {\n  settingsContainer: {\n    height: '100%',\n    overflow: 'scroll',\n    overflowX: 'hidden',\n    borderLeft: '1px solid #afafaf',\n    backgroundColor: 'white',\n    fontFamily: 'Avenir'\n  },\n  filler: {\n    display: 'flex',\n    width: '90%',\n    paddingLeft: '5%',\n    borderLeft: '1px solid #afafaf'\n  }\n};\n\nvar ChatSettingsDrawer = function ChatSettingsDrawer(props) {\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SettingOutlined, {\n    onClick: function onClick() {\n      return setIsOpen(true);\n    },\n    style: {\n      color: 'rgb(24, 144, 255)',\n      outline: 'none'\n    }\n  }), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$a.drawerContainer\n  }, /*#__PURE__*/React.createElement(CloseOutlined, {\n    style: styles$a.closeIcon,\n    onClick: function onClick() {\n      return setIsOpen(false);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$a.titleContainer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$a.titleText\n  }, \"Chat Settings\")), /*#__PURE__*/React.createElement(ChatSettings, props)));\n};\n\nvar styles$a = {\n  drawerContainer: {\n    position: 'fixed',\n    zIndex: '1',\n    top: '0px',\n    left: '0px',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    textAlign: 'left'\n  },\n  closeIcon: {\n    position: 'absolute',\n    left: '28px',\n    top: '32px'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '24px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl',\n  gutterWidth: 0\n});\n\nvar ChatHeader = function ChatHeader() {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      activeChat = _useContext.activeChat;\n\n  if (!chats || !activeChat || !chats[activeChat]) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  if (!conn || conn === null) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var chat = chats[activeChat];\n  var otherPerson = chat.people.find(function (person) {\n    return person.person.username !== conn.userName;\n  });\n  var title = chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title;\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"ce-chat-title\",\n    style: styles$b.titleSection\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    sm: 0,\n    style: _extends({}, styles$b.mobileOptiom, {\n      left: '6px'\n    }),\n    className: \"ce-chat-list-mobile-option\"\n  }, /*#__PURE__*/React.createElement(ChatListDrawer, null)), /*#__PURE__*/React.createElement(Col, {\n    xs: 8,\n    sm: 12,\n    style: styles$b.titleContainer,\n    className: \"ce-chat-title-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$b.titleText,\n    className: \"ce-chat-title-text\",\n    id: \"ce-chat-feed-title-\" + title\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$b.subtitleText,\n    className: \"ce-chat-subtitle-text\"\n  }, chat.last_message.created && chat.last_message.created.length > 0 ? \"Active \" + timeSinceDate(chat.last_message.created) : 'Say hello!')), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    sm: 0,\n    style: _extends({}, styles$b.mobileOptiom, {\n      right: '6px'\n    }),\n    className: \"ce-chat-settings-mobile-option\"\n  }, /*#__PURE__*/React.createElement(ChatSettingsDrawer, null)));\n};\n\nvar styles$b = {\n  titleSection: {\n    position: 'absolute',\n    top: '0px',\n    width: '100%',\n    zIndex: '1',\n    backgroundColor: 'rgb(256, 256, 256, 0.92)',\n    fontFamily: 'Avenir'\n  },\n  mobileOptiom: {\n    width: '100%',\n    top: '32px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)',\n    overflow: 'hidden'\n  },\n  titleContainer: {\n    width: '100%',\n    padding: '18px 0px',\n    textAlign: 'center',\n    color: 'rgb(24, 144, 255)'\n  },\n  titleText: {\n    fontSize: '24px',\n    fontWeight: '600'\n  },\n  subtitleText: {\n    fontSize: '12px'\n  }\n};\n\nvar RenderTrigger = function RenderTrigger(props) {\n  var _useContext = useContext(ChatEngineContext);\n\n  function useOnScreen(ref) {\n    var _useState = useState(false),\n        isIntersecting = _useState[0],\n        setIntersecting = _useState[1];\n\n    var observer = new IntersectionObserver(function (_ref) {\n      var entry = _ref[0];\n      setIntersecting(entry.isIntersecting);\n\n      if (entry.isIntersecting) {\n        props.onEnter && props.onEnter();\n      } else {\n        props.onLeave && props.onLeave();\n      }\n    });\n    useEffect(function () {\n      observer.observe(ref.current);\n      return function () {\n        observer.disconnect();\n      };\n    }, []);\n    return isIntersecting;\n  }\n\n  var ref = useRef();\n  var isVisible = useOnScreen(ref);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  });\n};\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar suffix = ['st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th', 'th', 'st'];\n\nvar DatePartition = function DatePartition(props) {\n  function getDate(date) {\n    return date ? date.substr(0, 10) : null;\n  }\n\n  function formatDate(date_time) {\n    if (!date_time) return '';\n    var year = date_time.substr(0, 4);\n    var month = months[parseInt(date_time.substr(5, 2)) - 1];\n    var day = date_time.substr(8, 2);\n    var dayDuffix = suffix[parseInt(date_time.substr(8, 2)) - 1];\n    var time = date_time.substr(11, 5);\n    var timeSuffix = '';\n\n    if (parseInt(time.substr(0, 2)) >= 12) {\n      if (parseInt(time.substr(0, 2)) > 12) {\n        time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2);\n      }\n\n      timeSuffix = 'PM';\n    } else {\n      timeSuffix = 'AM';\n    }\n\n    return time + timeSuffix + ', ' + month + ' ' + day + dayDuffix + ', ' + year;\n  }\n\n  var lastCreated = props.lastCreated,\n      created = props.created;\n  var lastDate = getDate(lastCreated);\n  var thisDate = getDate(created);\n\n  if (lastCreated && lastDate === thisDate) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$c.dateText,\n    className: \"ce-message-date-text\"\n  }, formatDate(created));\n};\n\nvar styles$c = {\n  dateText: {\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '4px',\n    paddingBottom: '10px',\n    fontSize: '15px',\n    color: 'rgba(0, 0, 0, .40)'\n  }\n};\n\nvar _loadingContainer, _thumbnail;\n\nvar Thumbnail$1 = function Thumbnail(props) {\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHovered = _useState[1];\n\n  var attachment = props.attachment;\n\n  var style = _extends({}, styles$d.thumbnail, {\n    border: hovered ? '1px solid #1890ff' : '0px'\n  });\n\n  if (!attachment) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles$d.loadingContainer\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n      style: {\n        color: 'white',\n        padding: '4px',\n        fontSize: '28px'\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"img\", {\n    onClick: function onClick() {\n      return window.open(attachment.file);\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHovered(false);\n    },\n    src: attachment.file,\n    alt: 'thumb-nail',\n    style: style\n  });\n};\n\nvar styles$d = {\n  loadingContainer: (_loadingContainer = {\n    width: '100%',\n    cursor: 'pointer',\n    textAlign: 'right',\n    display: 'inline-block',\n    objectFit: 'cover',\n    borderRadius: '0.3em',\n    marginRight: '2px',\n    height: '30vw'\n  }, _loadingContainer[\"width\"] = '30vw', _loadingContainer.maxHeight = '200px', _loadingContainer.maxWidth = '200px', _loadingContainer.minHeight = '100px', _loadingContainer.minWidth = '100px', _loadingContainer.backgroundColor = '#d9d9d9', _loadingContainer),\n  thumbnail: (_thumbnail = {\n    width: '100%',\n    cursor: 'pointer',\n    textAlign: 'right',\n    display: 'inline',\n    objectFit: 'cover',\n    borderRadius: '0.3em',\n    paddingRight: '2px',\n    height: '30vw'\n  }, _thumbnail[\"width\"] = '30vw', _thumbnail.maxHeight = '200px', _thumbnail.maxWidth = '200px', _thumbnail.minHeight = '100px', _thumbnail.minWidth = '100px', _thumbnail)\n};\nvar colors = ['#D64045', '#5B3000', '#00CC99', '#467599', '#1D3354', '#8F250C', '#6153CC', '#961D4E', '#A29F15', '#0CAADC', '#FF5154', '#FA7921', '#688E26', '#550527', '#A10702', '#FF1053', '#6C6EA0', '#100B00'];\n\nfunction stringToNumber(str) {\n  var sum = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    sum = sum + str.charCodeAt(i) * i - 97;\n  }\n\n  return sum;\n}\n\nfunction stringToColor(str) {\n  if (!str) {\n    return 'black';\n  } else {\n    return colors[stringToNumber(str) % colors.length];\n  }\n}\n\nvar Dot = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Dot, _Component);\n\n  function Dot() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      avatar: ''\n    };\n    return _this;\n  }\n\n  var _proto = Dot.prototype;\n\n  _proto.updateImg = function updateImg() {\n    var avatar = this.props.avatar;\n    avatar = avatar && avatar !== null ? avatar : '';\n\n    if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n      this.setState({\n        avatar: avatar\n      });\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateImg();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.updateImg();\n  };\n\n  _proto.render = function render() {\n    var username = this.props.username;\n    var color = stringToColor(username);\n    var customStyle = this.props.style ? this.props.style : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-dot\",\n      style: _extends({}, styles$e.dot, customStyle, {\n        backgroundColor: this.state.avatar ? 'white' : color,\n        backgroundImage: this.state.avatar && \"url(\" + this.state.avatar + \")\",\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: '14px'\n      })\n    });\n  };\n\n  return Dot;\n}(Component);\n\nvar styles$e = {\n  dot: {\n    width: '13px',\n    height: '13px',\n    borderRadius: '13px',\n    textAlign: 'center'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar Message = function Message(props) {\n  function renderReads() {\n    var chat = props.chat,\n        message = props.message;\n\n    if (!chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return chat.people.map(function (chatPerson, index) {\n      if (message.id === chatPerson.last_read) {\n        return /*#__PURE__*/React.createElement(Dot, {\n          key: \"read_\" + index,\n          avatar: chatPerson.person.avatar,\n          username: chatPerson.person.username,\n          style: {\n            \"float\": 'right',\n            marginLeft: '4px'\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"read_\" + index\n      });\n    });\n  }\n\n  function renderAttachments() {\n    var message = props.message;\n    var attachments = message && message.attachments ? message.attachments : [];\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        attachment: attachment,\n        key: \"attachment_\" + index\n      });\n    });\n  }\n\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage;\n\n  if (!message) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var attachments = message && message.attachments && message.attachments;\n  var topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var borderRadius = \"1.3em \" + topRightRadius + \" \" + bottomRightRadius + \" 1.3em\";\n  var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-row ce-my-message\",\n    style: {\n      width: '100%',\n      textAlign: 'right',\n      paddingBottom: paddingBottom\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'auto'\n    },\n    className: \"ce-my-message-attachments-container\"\n  }, renderAttachments()), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingRight: '2px'\n    },\n    className: \"ce-message-bubble-row ce-my-message-bubble-row\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    sm: 10,\n    md: 9\n  }, !attachments || message.text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-bubble ce-my-message-bubble\",\n    style: _extends({}, styles$f.myMessage, {\n      borderRadius: borderRadius\n    })\n  }, message.text)), /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"ce-reads-row ce-my-reads-row\"\n  }, renderReads())));\n};\n\nvar styles$f = {\n  myMessage: {\n    color: 'white',\n    cursor: 'pointer',\n    \"float\": 'right',\n    textAlign: 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: 'rgb(24, 144, 255)'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar TheirMessage = function TheirMessage(props) {\n  function renderReads() {\n    var chat = props.chat,\n        message = props.message;\n\n    if (!chat) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    return chat.people.map(function (person, index) {\n      if (message.id === person.last_read) {\n        return /*#__PURE__*/React.createElement(Dot$1, {\n          key: \"read_\" + index,\n          avatar: person.person.avatar,\n          username: person.person.username,\n          style: {\n            \"float\": 'left',\n            marginLeft: '4px'\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"read_\" + index\n      });\n    });\n  }\n\n  function renderAttachments() {\n    var message = props.message;\n    var attachments = message && message.attachments ? props.message.attachments : [];\n    return attachments.map(function (attachment, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        attachment: attachment,\n        key: \"attachment_\" + index\n      });\n    });\n  }\n\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage;\n\n  if (!message) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var attachments = message && message.attachments && message.attachments;\n  var topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var borderRadius = topLeftRadius + \" 1.3em 1.3em \" + bottomLeftRadius;\n  var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      paddingBottom: paddingBottom\n    },\n    className: \"ce-message-row ce-their-message\"\n  }, (!lastMessage || lastMessage.sender_username !== message.sender_username) && /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$g.nameText,\n    className: \"ce-their-message-sender\"\n  }, message.sender_username), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingLeft: '2px'\n    },\n    className: \"ce-their-message-row\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    sm: 10,\n    md: 9\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '0px'\n    },\n    className: \"ce-their-message-avatar\"\n  }, (!nextMessage || nextMessage.sender_username !== message.sender_username) && /*#__PURE__*/React.createElement(Avatar$1, {\n    show_online: false,\n    username: message.sender_username,\n    avatar: message.sender && message.sender.avatar\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'auto',\n      paddingLeft: '50px'\n    },\n    className: \"ce-their-message-attachments-container\"\n  }, renderAttachments()), !attachments || message.text && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: '48px'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-bubble ce-their-message-bubble\",\n    style: _extends({}, styles$g.theirMessage, {\n      borderRadius: borderRadius\n    })\n  }, message.text))), /*#__PURE__*/React.createElement(Col, {\n    xs: 9,\n    style: {\n      marginLeft: '48px'\n    },\n    className: \"ce-reads-row ce-their-reads-row\"\n  }, renderReads())));\n};\n\nvar styles$g = {\n  theirMessage: {\n    cusor: 'auto',\n    color: 'black',\n    \"float\": 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: '#f1f0f0'\n  },\n  nameText: {\n    paddingLeft: '62px',\n    paddingBottom: '2px',\n    color: 'rgba(0, 0, 0, .40)',\n    fontSize: '15px'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl'\n});\n\nvar SendingMessage = function SendingMessage(props) {\n  function renderAttachments(attachments) {\n    return attachments.map(function (a, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$1, {\n        key: \"sending-file-\" + index\n      });\n    });\n  }\n\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage;\n\n  if (!message) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  var attachments = message && message.attachments ? message.attachments : [];\n  var topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em';\n  var borderRadius = \"1.3em \" + topRightRadius + \" \" + bottomRightRadius + \" 1.3em\";\n  var paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-row ce-my-message ce-my-message-sending\",\n    style: {\n      width: '100%',\n      textAlign: 'right',\n      paddingBottom: paddingBottom\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'auto'\n    },\n    className: \"ce-my-message-attachments-container\"\n  }, renderAttachments(attachments)), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingRight: '2px'\n    },\n    className: \"ce-message-bubble-row ce-my-message-bubble-row ce-my-message-sending-row\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    sm: 10,\n    md: 9\n  }, message.text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-bubble ce-my-message-bubble\",\n    style: _extends({}, styles$h.myMessage, {\n      borderRadius: borderRadius\n    })\n  }, message.text)), /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    sm: 2,\n    md: 3\n  })));\n};\n\nvar styles$h = {\n  myMessage: {\n    color: 'white',\n    cursor: 'pointer',\n    \"float\": 'right',\n    textAlign: 'left',\n    padding: '12px',\n    fontSize: '15px',\n    whiteSpace: 'pre-line',\n    backgroundColor: '#40a9ff'\n  }\n};\n\nvar Message$1 = function Message$1(props) {\n  var lastMessage = props.lastMessage,\n      message = props.message,\n      nextMessage = props.nextMessage,\n      sending = props.sending,\n      chat = props.chat;\n\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn;\n\n  if (!message || !chat) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  if (!conn || conn === null) {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-message-and-date\"\n  }, !sending && /*#__PURE__*/React.createElement(DatePartition, {\n    lastCreated: lastMessage ? lastMessage.created : null,\n    created: message.created\n  }), sending ? /*#__PURE__*/React.createElement(SendingMessage, {\n    chat: chat,\n    conn: conn,\n    lastMessage: lastMessage,\n    message: message,\n    nextMessage: nextMessage\n  }) : /*#__PURE__*/React.createElement(\"div\", null, message.sender_username === conn.userName || message.sender_username === conn.senderUsername ? /*#__PURE__*/React.createElement(Message, {\n    chat: chat,\n    conn: conn,\n    lastMessage: lastMessage,\n    message: message,\n    nextMessage: nextMessage\n  }) : /*#__PURE__*/React.createElement(TheirMessage, {\n    chat: chat,\n    conn: conn,\n    lastMessage: lastMessage,\n    message: message,\n    nextMessage: nextMessage\n  })));\n};\n\nvar Messages = function Messages(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      messages = _useContext.messages,\n      activeChat = _useContext.activeChat,\n      setLoadMoreMessages = _useContext.setLoadMoreMessages,\n      setIsBottomVisible = _useContext.setIsBottomVisible;\n\n  var chat = chats && chats[activeChat];\n  var keys = Object.keys(messages);\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n  return keys.map(function (key, index) {\n    var message = messages[key];\n    var lastMessageKey = index === 0 ? null : keys[index - 1];\n    var nextMessageKey = index === keys.length - 1 ? null : keys[index + 1];\n\n    if (props.renderMessageBubble) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"message_\" + index\n      }, props.renderMessageBubble(conn, chat, messages[lastMessageKey], message, messages[nextMessageKey]));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"message_\" + index,\n      id: \"ce-message-\" + message.id\n    }, index === keys.length - 1 && /*#__PURE__*/React.createElement(RenderTrigger, {\n      onEnter: function onEnter() {\n        return setIsBottomVisible(true);\n      },\n      onLeave: function onLeave() {\n        return setIsBottomVisible(false);\n      }\n    }), /*#__PURE__*/React.createElement(Message$1, {\n      chat: chat,\n      message: message,\n      lastMessage: messages[lastMessageKey],\n      nextMessage: messages[nextMessageKey]\n    }), index === 0 && /*#__PURE__*/React.createElement(RenderTrigger, {\n      onEnter: function onEnter() {\n        return setLoadMoreMessages(true);\n      }\n    }));\n  });\n};\n\nvar SendingMessages = function SendingMessages(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      activeChat = _useContext.activeChat,\n      sendingMessages = _useContext.sendingMessages;\n\n  var keys = Object.keys(sendingMessages);\n  var chat = chats && chats[activeChat];\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n  return keys.map(function (key, index) {\n    var message = sendingMessages[key];\n    var lastMessageKey = index === 0 ? null : keys[index - 1];\n    var nextMessageKey = index === keys.length - 1 ? null : keys[index + 1];\n\n    if (message && message.chat === activeChat) {\n      return /*#__PURE__*/React.createElement(Message$1, {\n        sending: true,\n        key: \"sending-msg-\" + index,\n        chat: chat,\n        message: message,\n        lastMessage: sendingMessages[lastMessageKey],\n        nextMessage: sendingMessages[nextMessageKey]\n      });\n    }\n  });\n};\n\nvar Typers = function Typers(props) {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      activeChat = _useContext.activeChat,\n      typingCounter = _useContext.typingCounter;\n\n  var typers = typingCounter && typingCounter[activeChat] ? typingCounter[activeChat] : [];\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n\n  if (props.renderIsTyping) {\n    return props.renderIsTyping(typers);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", null, Object.keys(typers).map(function (username, index) {\n    if (conn.userName !== username && props.currentTime < typers[username] + 2000) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"typer_\" + index,\n        style: {\n          color: stringToColor(username),\n          padding: '2px',\n          paddingLeft: '12px'\n        }\n      }, username + \" is typing...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"typer_\" + index\n      });\n    }\n  }));\n};\n\nvar Thumbnail$2 = function Thumbnail(props) {\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHovered = _useState[1];\n\n  var _useState2 = useState(''),\n      blob = _useState2[0],\n      setBlob = _useState2[1];\n\n  useEffect(function () {\n    setBlob(URL.createObjectURL(props.file));\n  }, [props.file]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '12px 6px',\n      display: 'inline-block',\n      position: \"relative\"\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHovered(false);\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: styles$i.imageSquare,\n    alt: props.file ? props.file.name : '',\n    src: blob\n  }), hovered && /*#__PURE__*/React.createElement(CloseCircleTwoTone, {\n    style: styles$i.closeIcon,\n    onClick: function onClick() {\n      return props.onRemove && props.onRemove();\n    }\n  }));\n};\n\nvar styles$i = {\n  imageSquare: {\n    height: '108px',\n    width: '108px',\n    border: '1px solid #afafaf',\n    borderRadius: '8px',\n    objectFit: 'cover',\n    display: 'inline'\n  },\n  closeIcon: {\n    position: 'absolute',\n    bottom: 'calc(100% - 32px)',\n    left: '96px',\n    width: '0px',\n    cursor: 'pointer'\n  }\n};\n\nvar FileRow = function FileRow(props) {\n  function renderFiles() {\n    return props.files.map(function (file, index) {\n      return /*#__PURE__*/React.createElement(Thumbnail$2, {\n        file: file,\n        key: \"thumb_\" + index,\n        onRemove: function onRemove() {\n          return props.onRemove && props.onRemove(index);\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 'calc(100% - 24px)',\n      paddingLeft: '12px'\n    }\n  }, renderFiles());\n};\n\nvar ImagesInput = function ImagesInput(props) {\n  var _useState = useState({\n    hovered: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  function onSelect(event) {\n    var files = Array.from(event.target.files);\n    props.onSelectFiles && props.onSelectFiles(files);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"uploader\",\n    encType: \"multipart/form-data\",\n    style: {\n      height: '0px'\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"files\",\n    id: \"upload-document-button\"\n  }, /*#__PURE__*/React.createElement(PaperClipOutlined, {\n    onMouseEnter: function onMouseEnter() {\n      return setState(_extends({}, state, {\n        hovered: true\n      }));\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setState(_extends({}, state, {\n        hovered: false\n      }));\n    },\n    style: _extends({}, {\n      cursor: 'pointer',\n      position: 'absolute',\n      bottom: '20px',\n      right: '63px',\n      fontSize: '18px'\n    }, {\n      color: state.hovered ? '#69c0ff' : '#1890ff'\n    })\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    multiple: true,\n    id: \"files\",\n    accept: \"image/x-png,image/gif,image/jpeg\",\n    style: {\n      visibility: \"hidden\"\n    },\n    type: \"file\",\n    onChange: function onChange(e) {\n      return onSelect(e);\n    },\n    onClick: function onClick(e) {\n      return e.target.value = null;\n    }\n  }));\n};\n\nvar MessageInput = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MessageInput, _Component);\n\n  function MessageInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      value: null,\n      height: 0\n    };\n    return _this;\n  }\n\n  var _proto = MessageInput.prototype;\n\n  _proto.resize = function resize() {\n    var textarea = document.getElementById(\"msg-textarea\");\n    textarea.style.height = \"\";\n    textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\n    this.setState({\n      height: Math.min(textarea.scrollHeight, 150)\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.resize();\n  };\n\n  _proto.handleChange = function handleChange(e) {\n    this.resize();\n    this.props.handleChange && this.props.handleChange(e);\n  };\n\n  _proto.onKeyDown = function onKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      if (this.props.value.length > 0) {\n        this.props.onSubmit && this.props.onSubmit(e);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var style = _extends({}, styles$j.input, {\n      overflowY: this.state.height === 150 ? 'scroll' : 'hidden'\n    });\n\n    return /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"msg-textarea\",\n      className: \"ce-input ce-textarea-input\",\n      rows: \"1\",\n      style: style,\n      value: this.props.value,\n      placeholder: this.props.label,\n      onBlur: function onBlur() {\n        return _this2.setState({\n          focused: false\n        });\n      },\n      onFocus: function onFocus() {\n        return _this2.setState({\n          focused: true\n        });\n      },\n      type: this.props.type ? this.props.type : \"text\",\n      onChange: function onChange(e) {\n        return _this2.handleChange(e);\n      },\n      onKeyDown: function onKeyDown(e) {\n        return _this2.onKeyDown(e);\n      }\n    });\n  };\n\n  return MessageInput;\n}(Component);\n\nvar styles$j = {\n  input: {\n    border: '1px solid white',\n    width: 'calc(100% - 64px - 24px - 44px)',\n    outline: 'none',\n    fontSize: '15px',\n    fontFamily: 'Avenir',\n    paddingLeft: '12px',\n    paddingRight: '12px',\n    position: 'relative',\n    left: '12px',\n    resize: 'none',\n    overflowX: 'hidden'\n  }\n};\nvar _this$2 = undefined;\n\nvar NewMessageForm$1 = function NewMessageForm() {\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      activeChat = _useContext.activeChat,\n      sendingMessages = _useContext.sendingMessages,\n      setSendingMessages = _useContext.setSendingMessages;\n\n  var _useState = useState({\n    trigger: 0,\n    mod: 3,\n    value: '',\n    attachments: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  if (!conn || conn === null) return /*#__PURE__*/React.createElement(\"div\", null);\n\n  function _onRemove(index) {\n    var attachments = state.attachments;\n    attachments.splice(index, 1);\n    setState(_extends({}, state, {\n      attachments: attachments\n    }));\n  }\n\n  function handleChange(event) {\n    setState(_extends({}, state, {\n      value: event.target.value,\n      trigger: (state.trigger + 1) % state.mod\n    }));\n\n    if (state.trigger === 1) {\n      isTyping$1(conn, activeChat);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    var attachments = state.attachments;\n    var text = state.value.trim();\n    var custom_json = {\n      sender_id: Date.now().toString()\n    };\n    var sender_username = conn.userName ? conn.userName : conn.senderUsername;\n    var data = {\n      text: text,\n      attachments: attachments,\n      custom_json: custom_json,\n      sender_username: sender_username,\n      chat: activeChat\n    };\n\n    if (text.length > 0 || attachments.length > 0) {\n      sendMessage$1(conn, activeChat, data, function (data) {});\n    }\n\n    setState(_extends({}, state, {\n      value: '',\n      attachments: []\n    }));\n    var textarea = document.getElementById(\"msg-textarea\");\n    textarea.style.height = \"24px\";\n\n    var newSendingMessages = _extends({}, sendingMessages);\n\n    newSendingMessages[data.custom_json.sender_id] = data;\n    setSendingMessages(newSendingMessages);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"msg-form-container\",\n    style: styles$k.NewMessageFormContainer,\n    className: \"ce-message-form-container\"\n  }, /*#__PURE__*/React.createElement(FileRow, {\n    files: state.attachments,\n    onRemove: function onRemove(i) {\n      return _onRemove(i);\n    }\n  }), /*#__PURE__*/React.createElement(ImagesInput, {\n    onSelectFiles: function onSelectFiles(attachments) {\n      return setState(_extends({}, state, {\n        attachments: attachments\n      }));\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit.bind(_this$2),\n    className: \"ce-message-form\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$k.inputContainer,\n    className: \"ce-message-input-form\"\n  }, /*#__PURE__*/React.createElement(MessageInput, {\n    value: state.value,\n    label: \"Send a message...\",\n    handleChange: handleChange.bind(_this$2),\n    onSubmit: handleSubmit.bind(_this$2)\n  }), /*#__PURE__*/React.createElement(Button$1, {\n    icon: \"send\",\n    type: \"submit\",\n    id: \"ce-send-message-button\",\n    style: {\n      position: 'absolute',\n      bottom: '10px',\n      right: '6px'\n    }\n  }))));\n};\n\nvar styles$k = {\n  NewMessageFormContainer: {\n    position: 'absolute',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    minHeight: '36px',\n    paddingTop: '10px',\n    paddingBottom: '6px'\n  }\n};\nvar initial = 45;\nvar count$1 = initial;\nvar interval$1 = 33;\n\nvar ChatFeed = function ChatFeed(props) {\n  var didMountRef = useRef(false);\n\n  var _useState = useState(0),\n      duration = _useState[0],\n      setDuration = _useState[1];\n\n  var _useState2 = useState(null),\n      currentChat = _useState2[0],\n      setCurrentChat = _useState2[1];\n\n  var _useState3 = useState(Date.now()),\n      currentTime = _useState3[0],\n      setCurrentTime = _useState3[1];\n\n  var _useContext = useContext(ChatEngineContext),\n      conn = _useContext.conn,\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      sendingMessages = _useContext.sendingMessages,\n      messages = _useContext.messages,\n      setMessages = _useContext.setMessages,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat,\n      loadMoreMessages = _useContext.loadMoreMessages,\n      setLoadMoreMessages = _useContext.setLoadMoreMessages,\n      isBottomVisible = _useContext.isBottomVisible;\n\n  function onReadMessage(chat) {\n    if (chats) {\n      var newChats = _extends({}, chats);\n\n      newChats[chat.id] = chat;\n      setChats(newChats);\n    }\n  }\n\n  function onGetMessages(chatId, messages, scrollDownTo) {\n    setMessages(_$1.mapKeys(messages, 'id'));\n    console.log(\"New Messge arrived\");\n\n    if (messages.length > 0) {\n      var message = messages[messages.length - 1];\n\n      if (props.userName && props.userName !== message.sender_username) {\n        readMessage(conn, chatId, message.id, function (chat) {\n          return onReadMessage(chat);\n        });\n      }\n    }\n\n    if (scrollDownTo) {\n      console.log(\"New Messge \" + scrollDownTo);\n      animateScroll.scrollToBottom({\n        duration: 0,\n        containerId: scrollDownTo\n      });\n    }\n\n    props.onGetMessages && props.onGetMessages(chatId, messages);\n  }\n\n  function loadMessages(loadMoreMessages) {\n    if (loadMoreMessages) {\n      count$1 = count$1 + interval$1;\n      setLoadMoreMessages(false);\n      getLatestMessages(conn, activeChat, count$1, function (chatId, messages) {\n        return onGetMessages(chatId, messages, false);\n      });\n    } else if (props.projectID == '3d7fabcc-f5f4-4bfe-ae0a-34cd71c9b916' && conn && !props.activeChat && activeChat !== null && activeChat !== currentChat) {\n      count$1 = initial;\n      setCurrentChat(activeChat);\n      getLatestMessages(conn, activeChat, count$1, function (chatId, messages) {\n        return onGetMessages(chatId, messages, \"ce-feed-container-3d7fabcc-f5f4-4bfe-ae0a-34cd71c9b916\");\n      });\n    } else if (props.projectID == '3d7fabcc-f5f4-4bfe-ae0a-34cd71c9b916' && conn && props.activeChat && props.activeChat !== currentChat) {\n      count$1 = initial;\n      setActiveChat(props.activeChat);\n      setCurrentChat(props.activeChat);\n      getLatestMessages(conn, props.activeChat, count$1, function (chatId, messages) {\n        return onGetMessages(chatId, messages, \"ce-feed-container-3d7fabcc-f5f4-4bfe-ae0a-34cd71c9b916\");\n      });\n    } else if (props.projectID == '6d68dbc1-8843-403d-a512-781c5d48182e' && conn && !props.activeChat && activeChat !== null && activeChat !== currentChat) {\n      count$1 = initial;\n      setCurrentChat(activeChat);\n      getLatestMessages(conn, activeChat, count$1, function (chatId, messages) {\n        return onGetMessages(chatId, messages, \"ce-feed-container-6d68dbc1-8843-403d-a512-781c5d48182e\");\n      });\n    } else if (props.projectID == '6d68dbc1-8843-403d-a512-781c5d48182e' && conn && props.activeChat && props.activeChat !== currentChat) {\n      count$1 = initial;\n      setActiveChat(props.activeChat);\n      setCurrentChat(props.activeChat);\n      getLatestMessages(conn, props.activeChat, count$1, function (chatId, messages) {\n        return onGetMessages(chatId, messages, \"ce-feed-container-6d68dbc1-8843-403d-a512-781c5d48182e\");\n      });\n    }\n  }\n\n  useEffect(function () {\n    loadMessages(false);\n  }, [conn, activeChat, currentChat]);\n  useEffect(function () {\n    loadMessages(loadMoreMessages);\n  }, [loadMoreMessages]);\n  useEffect(function () {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      setTimeout(function () {\n        setDuration(100);\n      }, 3000);\n      setInterval(function () {\n        setCurrentTime(Date.now());\n      }, 1000);\n    } else {\n      console.log(\"Lol \", messages.length);\n\n      if (isBottomVisible && !_$1.isEmpty(messages)) {\n        if (props.projectID == '6d68dbc1-8843-403d-a512-781c5d48182e') {\n          animateScroll.scrollToBottom({\n            duration: duration,\n            containerId: \"ce-feed-container-6d68dbc1-8843-403d-a512-781c5d48182e\"\n          });\n        }\n\n        if (props.projectID == '3d7fabcc-f5f4-4bfe-ae0a-34cd71c9b916') {\n          animateScroll.scrollToBottom({\n            duration: duration,\n            containerId: \"ce-feed-container-3d7fabcc-f5f4-4bfe-ae0a-34cd71c9b916\"\n          });\n        }\n      }\n    }\n  }, [sendingMessages, messages, isBottomVisible]);\n  var chat = chats && chats[currentChat];\n\n  if (props.renderChatFeed) {\n    return props.renderChatFeed(props);\n  } else if (conn === undefined) {\n    return /*#__PURE__*/React.createElement(AuthFail, null);\n  } else if (conn && chats !== null && _$1.isEmpty(chats)) {\n    return /*#__PURE__*/React.createElement(Welcome, null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ce-chat-feed\",\n    style: {\n      height: '100%',\n      maxHeight: '100vh',\n      backgroundColor: '#f0f0f0'\n    }\n  }, props.renderChatHeader ? props.renderChatHeader(chat) : /*#__PURE__*/React.createElement(ChatHeader, null), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ce-feed-container\" + \"-\" + props.projectID,\n    style: styles$l.feedContainer,\n    className: \"ce-chat-feed-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '88px'\n    },\n    className: \"ce-feed-container-top\"\n  }), /*#__PURE__*/React.createElement(Messages, props), /*#__PURE__*/React.createElement(SendingMessages, props), /*#__PURE__*/React.createElement(Typers, {\n    currentTime: currentTime\n  }), /*#__PURE__*/React.createElement(ConnectionBar, null), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '54px'\n    },\n    className: \"ce-feed-container-bottom\"\n  })), props.renderNewMessageForm ? props.renderNewMessageForm(props, currentChat) : /*#__PURE__*/React.createElement(NewMessageForm$1, null));\n};\n\nvar styles$l = {\n  feedContainer: {\n    width: '100%',\n    height: '100%',\n    maxHeight: '100vh',\n    overflowX: 'hidden',\n    overflowY: 'scroll',\n    backgroundColor: 'white',\n    fontFamily: 'Avenir'\n  }\n};\nsetConfiguration({\n  maxScreenClass: 'xl',\n  gutterWidth: 0\n});\n\nvar ChatEngine = function ChatEngine(props) {\n  var context = useContext(ChatEngineContext);\n  var height = props.height;\n\n  var propsAndContext = _extends({}, props, context);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left',\n      backgroundColor: 'white'\n    }\n  }, /*#__PURE__*/React.createElement(Socket, props), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    xs: 0,\n    sm: 3,\n    style: {\n      height: height ? height : ''\n    }\n  }, /*#__PURE__*/React.createElement(ChatList, propsAndContext)), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 6,\n    style: {\n      height: height ? height : ''\n    }\n  }, /*#__PURE__*/React.createElement(ChatFeed, propsAndContext)), /*#__PURE__*/React.createElement(Col, {\n    xs: 0,\n    sm: 3,\n    style: {\n      height: height ? height : ''\n    }\n  }, /*#__PURE__*/React.createElement(ChatSettings, propsAndContext))));\n};\n\nvar ChatEngineApp = function ChatEngineApp(props) {\n  if (useContext(ChatEngineContext)) {\n    return /*#__PURE__*/React.createElement(ChatEngine, props);\n  } else {\n    return /*#__PURE__*/React.createElement(ChatEngineWrapper, null, /*#__PURE__*/React.createElement(ChatEngine, props));\n  }\n};\n\nvar _this$3 = undefined;\n\nvar ChatSocket = function ChatSocket(props) {\n  var _useState = useState(Date.now() + 10000),\n      reconnect = _useState[0];\n\n  var _useContext = useContext(ChatEngineContext),\n      setConnecting = _useContext.setConnecting,\n      conn = _useContext.conn,\n      setConn = _useContext.setConn,\n      setCreds = _useContext.setCreds,\n      chats = _useContext.chats,\n      setChats = _useContext.setChats,\n      messages = _useContext.messages,\n      setMessages = _useContext.setMessages,\n      sendingMessages = _useContext.sendingMessages,\n      setSendingMessages = _useContext.setSendingMessages,\n      activeChat = _useContext.activeChat,\n      setActiveChat = _useContext.setActiveChat,\n      typingCounter = _useContext.typingCounter,\n      setTypingCounter = _useContext.setTypingCounter;\n\n  function onEditChat(chat) {\n    if (chats) {\n      var newChats = _extends({}, chats);\n\n      newChats[chat.id] = chat;\n      setChats(newChats);\n    }\n\n    props.onEditChat && props.onEditChat(chat);\n  }\n\n  function onGetChat(chat) {\n    if (activeChat === null) {\n      setActiveChat(chat.id);\n    }\n\n    setChats(_.mapKeys([chat], 'id'));\n  }\n\n  function onConnect(conn) {\n    setConn(conn);\n    setCreds(conn);\n    setConnecting(false);\n    getChat$1(conn, props.chatID, function (chat) {\n      return onGetChat(chat);\n    });\n\n    if (Date.now() > reconnect) {\n      getLatestMessages$1(conn, props.chatID, 45, function (id, list) {\n        setMessages(_extends({}, messages, _.mapKeys(list, 'id')));\n      });\n    }\n\n    props.onConnect && props.onConnect(conn);\n  }\n\n  function handleEvent(event) {\n    var eventJSON = JSON.parse(event);\n\n    if (eventJSON.action === 'login_error') {\n      console.log(\"Your chat auth credentials were not correct: \\n\\n                Project ID: \" + props.projectID + \" \\n\\n                Chat ID: \" + props.chatID + \" \\n\\n                Access Key: \" + props.chatAccessKey + \"\\n\\n                Double check these credentials to make sure they're correct.\\n\\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.\");\n      setConn(undefined);\n      setCreds(undefined);\n      props.onFailAuth && props.onFailAuth(conn);\n    } else if (eventJSON.action === 'edit_chat') {\n      onEditChat(eventJSON.data);\n    } else if (eventJSON.action === 'delete_chat') {\n      var chat = eventJSON.data;\n\n      if (chats) {\n        chats[chat.id] = undefined;\n        setChats(chats);\n      }\n\n      props.onDeleteChat && props.onDeleteChat(chat);\n    } else if (eventJSON.action === 'add_person') {\n      onEditChat(eventJSON.data);\n      props.onAddPerson && props.onAddPerson(eventJSON.data);\n    } else if (eventJSON.action === 'remove_person') {\n      onEditChat(eventJSON.data);\n      props.onRemovePerson && props.onRemovePerson(eventJSON.data);\n    } else if (eventJSON.action === 'new_message') {\n      var _eventJSON$data = eventJSON.data,\n          id = _eventJSON$data.id,\n          message = _eventJSON$data.message;\n\n      if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n        sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined;\n        setSendingMessages(sendingMessages);\n      }\n\n      if (id === activeChat) {\n        var newMessages = _extends({}, messages);\n\n        newMessages[message.id] = message;\n        setMessages(newMessages);\n      }\n\n      props.onNewMessage && props.onNewMessage(id, message);\n    } else if (eventJSON.action === 'edit_message') {\n      var _eventJSON$data2 = eventJSON.data,\n          _id = _eventJSON$data2.id,\n          _message = _eventJSON$data2.message;\n\n      if (_id === activeChat) {\n        messages[_message.id] = _message;\n        setMessages(messages);\n      }\n\n      props.onEditMessage && props.onEditMessage(_id, _message);\n    } else if (eventJSON.action === 'delete_message') {\n      var _eventJSON$data3 = eventJSON.data,\n          _id2 = _eventJSON$data3.id,\n          _message2 = _eventJSON$data3.message;\n\n      if (_id2 === activeChat) {\n        messages[_message2.id] = undefined;\n        setMessages(messages);\n      }\n\n      props.onDeleteMessage && props.onDeleteMessage(_id2, _message2);\n    } else if (eventJSON.action === 'is_typing') {\n      var _extends2, _extends3;\n\n      var _eventJSON$data4 = eventJSON.data,\n          _id3 = _eventJSON$data4.id,\n          person = _eventJSON$data4.person;\n\n      var newTypingCounter = _extends({}, typingCounter);\n\n      newTypingCounter = _extends({}, newTypingCounter, (_extends3 = {}, _extends3[_id3] = _extends({}, newTypingCounter[_id3], (_extends2 = {}, _extends2[person] = Date.now(), _extends2)), _extends3));\n      setTypingCounter(newTypingCounter);\n      props.onTyping && props.onTyping(_id3, person);\n    }\n  }\n\n  function onClose() {\n    setConnecting(true);\n  }\n\n  var development = props.development,\n      publicKey = props.publicKey,\n      projectID = props.projectID,\n      chatID = props.chatID,\n      chatAccessKey = props.chatAccessKey;\n  var wsStart = development ? 'ws://' : 'wss://';\n  var rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io';\n  var project = publicKey ? publicKey : projectID;\n  return /*#__PURE__*/React.createElement(WebSocket, {\n    url: \"\" + wsStart + rootHost + \"/chat/?projectID=\" + project + \"&chatID=\" + chatID + \"&accessKey=\" + chatAccessKey,\n    onOpen: function onOpen() {\n      return onConnect(props);\n    },\n    onClose: onClose.bind(_this$3),\n    onMessage: handleEvent.bind(_this$3),\n    reconnectIntervalInMilliSeconds: 3000\n  });\n};\n\nvar Avatar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Avatar, _Component);\n\n  function Avatar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      avatar: ''\n    };\n    return _this;\n  }\n\n  var _proto = Avatar.prototype;\n\n  _proto.updateImg = function updateImg() {\n    var avatar = this.props.avatar;\n    avatar = avatar && avatar !== null ? avatar : '';\n\n    if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n      this.setState({\n        avatar: avatar\n      });\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateImg();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.updateImg();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        username = _this$props.username,\n        is_online = _this$props.is_online;\n    var customStyle = this.props.style ? this.props.style : {};\n    var text = username ? username.substring(0, 2).toUpperCase() : '';\n    var color = stringToColor(username);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '48px',\n        height: '48px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '0px'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar\",\n      style: _extends({}, styles$m.avatar, customStyle, {\n        backgroundColor: this.state.avatar ? 'white' : color,\n        backgroundImage: this.state.avatar && \"url(\" + this.state.avatar + \")\",\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: '48px'\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-text\",\n      style: styles$m.avatarText\n    }, !this.state.avatar && text))), this.props.show_online !== false && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-avatar-status\",\n      style: _extends({}, styles$m.status, {\n        backgroundColor: is_online ? '#52c41a' : '#f5222d'\n      })\n    }));\n  };\n\n  return Avatar;\n}(Component);\n\nvar styles$m = {\n  avatar: {\n    width: '44px',\n    height: '44px',\n    borderRadius: '22px',\n    color: 'white',\n    textAlign: 'center'\n  },\n  avatarText: {\n    color: 'white',\n    paddingTop: '12px',\n    fontSize: '15px',\n    fontWeight: '600'\n  },\n  status: {\n    width: '8px',\n    height: '8px',\n    borderRadius: '100%',\n    border: '2px solid white'\n  }\n};\n\nvar _dangerButton;\n\nvar Button = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Button, _Component);\n\n  function Button() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      hovered: false\n    };\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        value = _this$props.value,\n        icon = _this$props.icon,\n        theme = _this$props.theme,\n        style = _this$props.style;\n    var customStyle = style ? style : {};\n    var hoverStyle = this.state.hovered ? styles$n.hoverButton : {};\n    var themeStyle = theme === 'danger' ? styles$n.dangerButton : styles$n.button;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: this.props.id,\n      type: this.props.type,\n      onClick: function onClick() {\n        return _this2.props.onClick && _this2.props.onClick();\n      },\n      onMouseEnter: function onMouseEnter() {\n        return _this2.setState({\n          hovered: true\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return _this2.setState({\n          hovered: false\n        });\n      },\n      style: _extends({}, themeStyle, customStyle, hoverStyle),\n      className: \"ce-primary-button \" + (theme === 'danger' ? 'ce-danger-button' : '')\n    }, icon === 'plus' && /*#__PURE__*/React.createElement(PlusOutlined, null), icon === 'send' && /*#__PURE__*/React.createElement(ArrowUpOutlined, null), icon === 'delete' && /*#__PURE__*/React.createElement(DeleteOutlined, null), icon === 'user-add' && /*#__PURE__*/React.createElement(UserAddOutlined, null), value && icon ? \" \" + value : value);\n  };\n\n  return Button;\n}(Component);\n\nvar styles$n = {\n  button: {\n    color: 'white',\n    border: 'none',\n    outline: 'none',\n    height: '36px',\n    fontSize: '15px',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    borderRadius: '33px',\n    backgroundColor: '#1890ff'\n  },\n  dangerButton: (_dangerButton = {\n    color: 'red',\n    border: 'none',\n    outline: 'none',\n    height: '36px',\n    fontSize: '15px',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    borderRadius: '33px',\n    backgroundColor: 'white'\n  }, _dangerButton[\"border\"] = '1px solid red', _dangerButton),\n  hoverButton: {\n    opacity: '0.66'\n  }\n};\n\nvar TextInput = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      value: null\n    };\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var value = this.props[\"default\"];\n\n    if (value) {\n      var event = {\n        target: {\n          value: value\n        }\n      };\n      this.props.handleChange(event);\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var customStyle = this.props.style ? this.props.style : {};\n    var defaultStyle = this.state.focused ? styles$o.focusInput : styles$o.input;\n    return /*#__PURE__*/React.createElement(\"input\", {\n      id: this.props.id,\n      autoFocus: this.props.autoFocus,\n      className: \"ce-input ce-text-input\",\n      value: this.props.value,\n      placeholder: this.props.label,\n      style: _extends({}, defaultStyle, customStyle),\n      onBlur: function onBlur() {\n        _this2.setState({\n          focused: false\n        });\n\n        _this2.props.onBlur && _this2.props.onBlur();\n      },\n      onFocus: function onFocus() {\n        _this2.setState({\n          focused: true\n        });\n\n        _this2.props.onFocus && _this2.props.onFocus();\n      },\n      type: this.props.type ? this.props.type : \"text\",\n      onChange: function onChange(e) {\n        return _this2.props.handleChange && _this2.props.handleChange(e);\n      }\n    });\n  };\n\n  return TextInput;\n}(Component);\n\nvar styles$o = {\n  input: {\n    height: '36px',\n    fontSize: '15px',\n    fontFamily: 'Avenir',\n    outline: 'none',\n    borderRadius: '24px',\n    border: '1px solid #d9d9d9',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  },\n  focusInput: {\n    height: '36px',\n    fontSize: '15px',\n    fontFamily: 'Avenir',\n    outline: 'none',\n    borderRadius: '24px',\n    border: '1px solid #1890ff',\n    padding: '0px 12px',\n    boxSizing: 'border-box'\n  }\n};\n\nvar AutoComplete = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AutoComplete, _Component);\n\n  function AutoComplete() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      focused: false,\n      showAll: false\n    };\n    return _this;\n  }\n\n  var _proto = AutoComplete.prototype;\n\n  _proto.onFocus = function onFocus() {\n    this.onChange('', true);\n    this.setState({\n      focused: true\n    });\n    this.props.onFocus && this.props.onFocus();\n  };\n\n  _proto.onBlur = function onBlur() {\n    this.setState({\n      focused: false\n    });\n    this.props.onBlur && this.props.onBlur();\n  };\n\n  _proto.onChange = function onChange(value, showAll) {\n    this.setState({\n      showAll: showAll\n    });\n    this.props.handleChange && this.props.handleChange(value);\n  };\n\n  _proto.getNames = function getNames() {\n    var _this2 = this;\n\n    var count = 0;\n    var max = this.props.max ? this.props.max : 3;\n    var results = [];\n    this.props.options.map(function (option) {\n      if (JSON.stringify(option).toLowerCase().indexOf(_this2.props.value.toLowerCase()) !== -1 && count < max) {\n        count = count + 1;\n        results.push(option);\n      }\n    });\n    return results;\n  };\n\n  _proto.renderOptions = function renderOptions() {\n    var _this3 = this;\n\n    if (!this.props.value && !this.state.showAll) {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n\n    var results = this.getNames();\n    return results.map(function (option, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"option_\" + index,\n        className: \"ce-autocomplete-option\"\n      }, _this3.props.renderOption && _this3.props.renderOption(option), index === results.length - 1 && /*#__PURE__*/React.createElement(\"div\", {\n        style: styles$p.close,\n        className: \"ce-autocomplete-close\",\n        onClick: function onClick() {\n          return _this3.onChange('', false);\n        }\n      }, /*#__PURE__*/React.createElement(CloseOutlined, null)));\n    });\n  };\n\n  _proto.render = function render() {\n    var _this4 = this;\n\n    var options = this.props.options;\n    var customStyle = this.props.style ? this.props.style : {};\n\n    var defaultStyle = _extends({}, styles$p.input, {\n      border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9'\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"ce-add-username-input\",\n      className: \"ce-input ce-autocomplete-input\",\n      value: this.props.value,\n      placeholder: this.props.label,\n      style: _extends({}, defaultStyle, customStyle),\n      type: this.props.type ? this.props.type : \"text\",\n      onBlur: function onBlur() {\n        return _this4.onBlur();\n      },\n      onFocus: function onFocus() {\n        return _this4.onFocus();\n      },\n      onChange: function onChange(e) {\n        return _this4.onChange(e.target.value, true);\n      }\n    }), options && options.length > 0 && this.state.showAll && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ce-autocomplete-options\",\n      style: {\n        borderRadius: '19px',\n        border: '1px solid #afafaf',\n        overflow: 'hidden'\n      }\n    }, this.props.options && this.renderOptions()));\n  };\n\n  return AutoComplete;\n}(Component);\n\nvar styles$p = {\n  input: {\n    height: '36px',\n    fontSize: '15px',\n    outline: 'none',\n    borderRadius: '24px',\n    padding: '0px 12px',\n    boxSizing: 'border-box',\n    fontFamily: 'Avenir'\n  },\n  close: {\n    cursor: 'pointer',\n    textAlign: 'center',\n    padding: '8px 12px',\n    fontSize: '15px',\n    borderRadius: '24px'\n  }\n};\n\nfunction addPerson(props, chatId, userName, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    username: userName\n  }, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('New Person Error', error);\n  });\n}\n\nfunction removePerson(props, chatId, userName, callback) {\n  axios.put(getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    username: userName\n  }, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Person Error', error);\n  });\n}\n\nfunction getOtherPeople(props, chatId, successCallback, errorCallback) {\n  axios.get(getApiUrl(props) + \"/chats/\" + chatId + \"/others/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data);\n    successCallback && successCallback(chatId, response.data);\n  })[\"catch\"](function (error) {\n    console.log('Fetch Other People Error', error);\n    errorCallback && errorCallback();\n  });\n}\n\nfunction getMyData(props, callback) {\n  axios.get(getApiUrl(props) + \"/chats/me/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Get Myself Error', error);\n  });\n}\n\nfunction editMyData(props, data, callback) {\n  axios.patch(getApiUrl(props) + \"/chats/me/\", data, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Edit Myself Error', error);\n  });\n}\n\nfunction leaveChat(props, chatId, callback) {\n  axios[\"delete\"](getApiUrl(props) + \"/chats/\" + chatId + \"/people/\", {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {\n    console.log('Delete Person Error', error);\n  });\n}\n\nfunction isTyping(props, chatId, callback) {\n  axios.post(getApiUrl(props) + \"/chats/\" + chatId + \"/typing/\", {}, {\n    headers: getHeaders(props)\n  }).then(function (response) {\n    callback && callback(response.data);\n  })[\"catch\"](function (error) {});\n}\n\nexport { AutoComplete as AutoCompleteInput, Avatar, Button, ChatCard, ChatEngineApp as ChatEngine, ChatEngineContext, ChatEngineWrapper, ChatFeed, ChatHeader, ChatList, ChatSettings, ChatSettingsTop, ChatSocket, Dot, Message$1 as MessageBubble, NewChatForm, NewMessageForm$1 as NewMessageForm, OptionsSettings, PeopleSettings, PhotosSettings, Socket, TextInput, Typers, addPerson, deleteChat, deleteMessage, editChat, editMessage, editMyData, getChat, getChats, getLatestChats, getLatestMessages, getMessage, getMessages, getMyData, getOrCreateChat, getOtherPeople, isTyping, leaveChat, newChat, readMessage, removePerson, sendMessage };","map":{"version":3,"mappings":"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","names":["ChatEngineContext","createContext","ChatEngineWrapper","useState","connecting","setConnecting","conn","setConn","creds","setCreds","chats","setChats","messages","setMessages","sendingMessages","setSendingMessages","activeChat","setActiveChat","typingCounter","setTypingCounter","loadMoreMessages","setLoadMoreMessages","isBottomVisible","setIsBottomVisible","value","React","Provider","props","children","Socket","Date","now","reconnect","useContext","sortChats","Object","values","sort","a","b","aDate","last_message","created","bDate","onEditChat","chat","newChats","id","onConnect","getLatestChats","_","mapKeys","getLatestMessages","list","handleEvent","event","eventJSON","JSON","parse","action","console","log","projectID","userName","userSecret","undefined","onFailAuth","data","onNewChat","isEmpty","sortedChats","parseInt","onDeleteChat","onAddPerson","onRemovePerson","message","custom_json","indexOf","sender_id","newMessages","sender_username","readMessage","onNewMessage","onEditMessage","onDeleteMessage","person","newTypingCounter","onTyping","onClose","development","publicKey","userPassword","wsStart","rootHost","project","secret","WebSocket","url","onOpen","bind","_this","onMessage","reconnectIntervalInMilliSeconds","getApiUrl","getHeaders","chatID","chatAccessKey","getChats","callback","axios","get","str","headers","then","response","onGetChats","error","newChat","post","count","getOrCreateChat","put","getChat","chatId","editChat","patch","deleteChat","ChatLoader","useOnScreen","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","onVisible","useEffect","observe","current","disconnect","useRef","isVisible","NewChatForm","setValue","selected","setSelected","handleChange","target","handleSubmit","preventDefault","trim","length","title","style","styles","newChatContainer","className","onSubmit","TextInput","autoFocus","label","onBlur","width","e","height","fontWeight","fontSize","position","top","textAlign","Button","icon","onClick","padding","backgroundColor","timeSinceDate","date","day","substr","month","year","hour","minute","second","sent","setHours","setMinutes","setSeconds","toString","dayStr","timeStr","daySinceSent","ChatCard","readLastMessage","people","map","chat_person","username","last_read","extraStyle","otherPerson","find","is_direct_chat","lastMessage","text","attachments","chatContainer","titleText","borderRadius","display","messageText","paddingBottom","cursor","whiteSpace","overflow","color","border","interval","ChatList","didMountRef","hasMoreChats","setHasMoreChats","renderChats","index","key","renderChatCard","onChatClick","chatList","loadChats","renderChatList","chatListContainer","chatsContainer","renderNewChatForm","ChatForm","maxHeight","overflowX","borderRight","fontFamily","getMessages","onGetMessages","sendMessage","formdata","FormData","i","append","name","files","stringify","messageId","deleteMessage","AuthFail","paddingTop","src","alt","paddingLeft","href","Welcome","zIndex","bottom","left","spin","ChatListDrawer","isOpen","setIsOpen","_useState","outline","drawerContainer","closeIcon","CloseOutlined","styles$3","titleContainer","removePerson","removePerson$1","first_name","last_name","onMouseEnter","onMouseLeave","avatar","Avatar$1","is_online","renderPersonText","Button$1","theme","focused","setFocused","_props$person","option","PersonForm","others","setState","addPerson","state","_extends","getOthers","getOtherPeople","getOtherPeople$1","invitePerson","marginBottom","options","onFocus","renderOption","PeopleSettings","collapsed","hovered","chatPerson","Person","borderTop","collapseIcon","renderChatPeople","right","attachment","container","image","file","objectFit","PhotosSettings","Thumbnail","renderPhotos","OptionsSettings","NewMessageForm","TextInput$1","topPeople","slice","getOtherPerson","show_online","renderOnePerson","_useContext","renderChatSettings","filler","settingsContainer","renderChatSettingsTop","borderLeft","ChatSettingsDrawer","styles$a","maxScreenClass","gutterWidth","Row","xs","sm","subtitleText","createElement","titleSection","onEnter","suffix","getDate","DatePartition","date_time","dayDuffix","time","timeSuffix","String","lastDate","thisDate","dateText","formatDate","setHovered","loadingContainer","window","open","marginRight","thumbnail","_loadingContainer","paddingRight","_thumbnail","stringToNumber","sum","charCodeAt","apply","_Component","_proto","updateImg","stringToColor","customStyle","styles$e","dot","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","Component","renderReads","Message","Dot","marginLeft","Thumbnail$1","nextMessage","topRightRadius","bottomRightRadius","renderAttachments","md","myMessage","TheirMessage","Dot$1","topLeftRadius","bottomLeftRadius","nameText","sender","theirMessage","cusor","Message$1","sending","lastCreated","keys","lastMessageKey","nextMessageKey","renderMessageBubble","onLeave","MessageBubble","typers","renderIsTyping","currentTime","blob","setBlob","_useState2","URL","createObjectURL","imageSquare","styles$i","onRemove","renderFiles","FileRow","ImagesInput","Array","onSelectFiles","encType","htmlFor","multiple","accept","visibility","type","onChange","onSelect","textarea","resize","getElementById","Math","onKeyDown","overflowY","rows","placeholder","input","trigger","mod","splice","isTyping","isTyping$1","sendMessage$1","newSendingMessages","_this$2","inputContainer","MessageInput","NewMessageFormContainer","minHeight","initial","duration","setDuration","currentChat","setCurrentChat","setCurrentTime","_useState3","scrollDownTo","onReadMessage","animateScroll","scrollToBottom","containerId","loadMessages","count$1","setTimeout","setInterval","renderChatFeed","renderChatHeader","_$1","feedContainer","setConfiguration","ChatEngine","context","propsAndContext","ChatEngineApp","ChatSocket","onGetChat","getChat$1","getLatestMessages$1","_eventJSON$data2","_id2","_eventJSON$data3","_message2","_id3","_extends3","componentDidMount","_key","args","componentDidUpdate","render","substring","split","_this$props","avatarText","toUpperCase","styles$m","status","_inheritsLoose","hoverStyle","themeStyle","button","_this2","dangerButton","hoverButton","opacity","arguments","styles$o","boxSizing","showAll","_len","getNames","max","results","toLowerCase","close","defaultStyle","_this3","styles$p","_this4","AutoComplete","successCallback","onGetOtherPeople","errorCallback","getMyData","leaveChat"],"sources":["../src/components/Context/index.js","../src/components/Socket/index.js","../src/actions/index.js","../src/actions/auth.js","../src/actions/chats/getChats.js","../src/actions/chats/newChat.js","../src/actions/chats/getLatestChats.js","../src/actions/chats/getOrCreateChat.js","../src/actions/chats/getChat.js","../src/actions/chats/editChat.js","../src/actions/chats/deleteChat.js","../src/components/ChatEngine/ChatList/ChatLoader.js","../src/components/ChatEngine/ChatList/NewChatForm/index.js","../src/components/ChatEngine/Utilities/dateToString.js","../src/components/ChatEngine/ChatList/ChatCard.js","../src/components/ChatEngine/ChatList/index.js","../src/actions/messages/getMessages.js","../src/actions/messages/getLatestMessages.js","../src/actions/messages/sendMessage.js","../src/actions/messages/getMessage.js","../src/actions/messages/editMessage.js","../src/actions/messages/readMessage.js","../src/actions/messages/deleteMessage.js","../src/components/ChatEngine/ChatFeed/Steps/AuthFail.js","../src/components/ChatEngine/ChatFeed/Steps/Welcome.js","../src/components/ChatEngine/ChatFeed/Steps/ConnectionBar.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatListDrawer.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/Person.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/Option.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/index.js","../src/components/ChatEngine/ChatSettings/PeopleSettings/index.js","../src/components/ChatEngine/ChatSettings/PhotosSettings/Thumbnail.js","../src/components/ChatEngine/ChatSettings/PhotosSettings/index.js","../src/components/ChatEngine/ChatSettings/OptionsSettings/index.js","../src/components/ChatEngine/ChatSettings/ChatSettingsTop/TitleForm/index.js","../src/components/ChatEngine/ChatSettings/ChatSettingsTop/index.js","../src/components/ChatEngine/ChatSettings/index.js","../src/components/ChatEngine/ChatFeed/ChatHeader/ChatSettingsDrawer.js","../src/components/ChatEngine/ChatFeed/ChatHeader/index.js","../src/components/ChatEngine/ChatFeed/Triggers/RenderTrigger.js","../src/components/ChatEngine/ChatFeed/Messages/MessageBubbles/DatePartition.js","../src/components/ChatEngine/ChatFeed/Messages/MessageBubbles/Thumbnail.js","../src/components/ChatEngine/Utilities/colorMapping.js","../src/components/ChatEngine/components/Avatar/Dot.js","../src/components/ChatEngine/ChatFeed/Messages/MessageBubbles/MyMessage.js","../src/components/ChatEngine/ChatFeed/Messages/MessageBubbles/TheirMessage.js","../src/components/ChatEngine/ChatFeed/Messages/MessageBubbles/SendingMessage.js","../src/components/ChatEngine/ChatFeed/Messages/MessageBubbles/index.js","../src/components/ChatEngine/ChatFeed/Messages/index.js","../src/components/ChatEngine/ChatFeed/Messages/SendingMessages.js","../src/components/ChatEngine/ChatFeed/Typers.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/Thumbnail.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/FileRow.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/ImagesInput.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/MessageInput.js","../src/components/ChatEngine/ChatFeed/NewMessageForm/index.js","../src/components/ChatEngine/ChatFeed/index.js","../src/components/ChatEngine/index.js","../src/components/index.js","../src/components/Socket/ChatSocket.js","../src/components/ChatEngine/components/Avatar/Avatar.js","../src/components/ChatEngine/components/Button/Button.js","../src/components/ChatEngine/components/Input/TextInput.js","../src/components/ChatEngine/components/Input/AutocompleteInput.js","../src/actions/people/addPerson.js","../src/actions/people/removePerson.js","../src/actions/people/getOtherPeople.js","../src/actions/people/getMyData.js","../src/actions/people/editMyData.js","../src/actions/people/leaveChat.js","../src/actions/typing/isTyping.js"],"sourcesContent":["import React, { useState, createContext } from 'react'\n\nexport const ChatEngineContext = createContext()\n\nexport const ChatEngineWrapper = props => {\n    const [connecting, setConnecting] = useState(true)\n    const [conn, setConn] = useState(null)\n    const [creds, setCreds] = useState(null)\n    const [chats, setChats] = useState(null)\n    const [messages, setMessages] = useState({})\n    const [sendingMessages, setSendingMessages] = useState({})\n    const [activeChat, setActiveChat] = useState(null)\n    const [typingCounter, setTypingCounter] = useState({})\n    const [loadMoreMessages, setLoadMoreMessages] = useState(false)\n    const [isBottomVisible, setIsBottomVisible] = useState(false)\n\n    const value = {\n        connecting, setConnecting,\n        conn, setConn,\n        creds, setCreds,\n        chats, setChats,\n        messages, setMessages,\n        sendingMessages, setSendingMessages,\n        activeChat, setActiveChat,\n        typingCounter, setTypingCounter,\n        loadMoreMessages, setLoadMoreMessages,\n        isBottomVisible, setIsBottomVisible,\n    }\n\n    return (\n        <ChatEngineContext.Provider value={value}>\n            {props.children}\n        </ChatEngineContext.Provider>\n    )\n}\n","import React, { useContext, useState } from 'react'\n\nimport { ChatEngineContext } from '../Context'\n\nimport { getLatestChats, getLatestMessages, readMessage } from 'react-chat-engine'\n\nimport { WebSocket } from 'nextjs-websocket'\n\nconst Socket = props => {\n    const [reconnect, reset] = useState(Date.now() + 10000)\n    const {\n      setConnecting,\n      conn, setConn, setCreds,\n      chats, setChats,\n      messages, setMessages,\n      sendingMessages, setSendingMessages,\n      activeChat, setActiveChat,\n      typingCounter, setTypingCounter,\n    } = useContext(ChatEngineContext)\n\n    function sortChats(chats) {\n        return Object.values(chats).sort((a, b) => { \n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\n            return new Date(bDate) - new Date(aDate); \n        })\n    }\n\n    // Common Context Handlers\n\n    function onEditChat(chat) {\n        if (chats) {\n            const newChats = {...chats}\n            newChats[chat.id] = chat\n            setChats(newChats)\n        }\n\n        props.onEditChat && props.onEditChat(chat)\n    }\n\n    function onConnect(conn) {\n        setConn(conn); setCreds(conn);\n        setConnecting(false)\n\n        getLatestChats(conn, 25, (chats) => setChats(_.mapKeys(chats, 'id')))\n\n        if (Date.now() > reconnect) {\n            getLatestMessages(\n                conn, activeChat, 45,\n                (id, list) => {\n                    setMessages({...messages, ..._.mapKeys(list, 'id')})\n                }\n            )\n        }\n        \n        props.onConnect && props.onConnect(conn)\n    }\n    \n    // Socket Events\n\n    function handleEvent(event) {\n        const eventJSON = JSON.parse(event)\n\n        if (eventJSON.action === 'login_error') {\n            console.log(\n                `Your login credentials were not correct: \\n\n                Project ID: ${props.projectID} \\n\n                Username: ${props.userName} \\n\n                User Secret: ${props.userSecret}\\n\n                Double check these credentials to make sure they're correct.\\n\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n            )\n\n            setConn(undefined); setCreds(undefined);\n\n            props.onFailAuth && props.onFailAuth(conn)\n\n        } else if (eventJSON.action === 'new_chat') {\n            const chat = eventJSON.data\n            \n            if (chats) {\n                const newChats = {...chats}\n                newChats[chat.id] = chat\n                setChats(newChats)\n                setActiveChat(chat.id)\n            }\n\n            props.onNewChat && props.onNewChat(eventJSON.data)\n\n        } else if (eventJSON.action === 'edit_chat') {\n            onEditChat(eventJSON.data)\n            \n        } else if (eventJSON.action === 'delete_chat') {\n            const chat = eventJSON.data \n\n            if (chats) {\n                chats[chat.id] = undefined\n                \n                setChats(chats)\n          \n                if (!_.isEmpty(chats)) {\n                    const sortedChats = sortChats(chats)\n                    setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0)\n                }\n            }\n\n            props.onDeleteChat && props.onDeleteChat(chat)\n\n        } else if (eventJSON.action === 'add_person') {\n            onEditChat(eventJSON.data)\n            \n            props.onAddPerson && props.onAddPerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'remove_person') {\n            onEditChat(eventJSON.data)\n\n            props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'new_message') {\n            const { id, message } = eventJSON.data\n\n            if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n                sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined\n                setSendingMessages(sendingMessages)\n            }\n        \n            if (id === activeChat) {\n                const newMessages = {...messages}\n                newMessages[message.id] = message\n                setMessages(newMessages)\n            }\n          \n            if (message.sender_username !== props.userName) {\n                readMessage(conn, activeChat, message.id, (chat) => onEditChat(chat))\n            }\n\n            props.onNewMessage && props.onNewMessage(id, message)\n\n        } else if (eventJSON.action === 'edit_message') {\n            const { id, message } = eventJSON.data\n            \n            if (id === activeChat) {\n                messages[message.id] = message\n                setMessages(messages)\n            }\n\n            props.onEditMessage && props.onEditMessage(id, message)\n\n        } else if (eventJSON.action === 'delete_message') {\n            const { id, message } = eventJSON.data\n\n            if (id === activeChat) {\n                messages[message.id] = undefined\n                setMessages(messages)\n            }\n\n            props.onDeleteMessage && props.onDeleteMessage(id, message)\n        \n        } else if (eventJSON.action === 'is_typing') {\n            const { id, person } = eventJSON.data\n            let newTypingCounter = {...typingCounter}\n            newTypingCounter = {\n                ...newTypingCounter,\n                [id]: {\n                    ...newTypingCounter[id],\n                    [person]: Date.now()\n                }\n            }\n                \n            setTypingCounter(newTypingCounter)\n                \n            props.onTyping && props.onTyping(id, person)\n        }\n    }\n\n    function onClose() { setConnecting(true) }\n\n    // Render\n    \n    const { \n        development,\n        publicKey, projectID, \n        userName, \n        userPassword, userSecret, \n    } = props \n    \n    const wsStart = development ? 'ws://' : 'wss://'\n    const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n    const project = publicKey ? publicKey : projectID\n    const secret = userPassword ? userPassword : userSecret\n\n    return <WebSocket \n        url={`${wsStart}${rootHost}/person/?publicKey=${project}&username=${userName}&secret=${secret}`}\n        onOpen={() => onConnect(props)}\n        onClose={onClose.bind(this)}\n        onMessage={handleEvent.bind(this)}\n        reconnectIntervalInMilliSeconds={3000}\n    />\n}\n\nexport default Socket","export function getApiUrl(props) { \n    if (props && props.development) {\n        return 'http://127.0.0.1:8000'\n    }\n    return 'https://api.chatengine.io'\n}\n","export function getHeaders(props) { \n    if (props.chatID) {\n        return { \n            \"public-key\": props.publicKey ? props.publicKey : props.projectID,\n            \"chat-id\": props.chatID,\n            \"access-key\": props.chatAccessKey,\n        }\n    }\n\n    return { \n        \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\n        \"User-Name\": props.userName,\n        \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\n    }\n}\n","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getChats(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function newChat(props, data, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/`,\n        data, \n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getLatestChats(props, count, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/latest/${count}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetChats && props.onGetChats(response.data)\n\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Chats Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getOrCreateChat(props, data, callback) {\n    axios.put(\n        `${str.getApiUrl(props)}/chats/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get or Create Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getChat(props, chatId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function editChat(props, chatId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        data, \n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Chat Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function deleteChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Chat Error', error)\n    });\n}","import React, { useState, useRef, useEffect } from 'react'\n\nconst ChatLoader = props => {\n    function useOnScreen(ref) {\n        const [isIntersecting, setIntersecting] = useState(false)\n      \n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                setIntersecting(entry.isIntersecting)\n                if (entry.isIntersecting) {\n                    props.onVisible()\n                }\n            }\n        )\n      \n        useEffect(() => {\n          observer.observe(ref.current)\n          // Remove the observer as soon as the component is unmounted\n          return () => { observer.disconnect() }\n        }, [])\n      \n        return isIntersecting\n    }\n  \n    const ref = useRef()\n    const isVisible = useOnScreen(ref)\n    \n    return <div ref={ref} />\n}\n\nexport default ChatLoader","import React, { useState, useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { newChat } from 'react-chat-engine'\n\nimport { Button, TextInput } from 'react-chat-engine'\n\nconst NewChatForm = () => {\n  const { conn } = useContext(ChatEngineContext)\n  const [value, setValue] = useState('')\n  const [selected, setSelected] = useState(false)\n  \n  function handleChange(event) {\n    setValue(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (value.trim().length > 0) {\n      newChat(\n        conn, \n        { title: value },\n        () => setSelected(false)\n      )\n    }\n\n    setValue('')\n  }\n\n  return (\n    <div style={styles.newChatContainer} className='ce-chat-form-container'>\n        {\n          selected ?\n          <form onSubmit={handleSubmit.bind(this)}> \n              <TextInput \n                autoFocus\n                label='Chat Title'\n                value={value}\n                id='ce-new-chat-title-field'\n                onBlur={() => setSelected(false)}\n                style={{ width: '100%' }}\n                handleChange={(e) => handleChange(e)}\n              />\n          </form>:\n          <div>\n            <div style={{ height: '0px' }}>\n              <div style={{ fontWeight: '600', fontSize: '24px', position: 'relative', top: '4px', width:' calc(100% - 48px)' }}>\n                My Chats\n              </div>\n            </div>\n\n            <div style={{ width: '100%', textAlign: 'right' }}>\n              <Button \n                icon='plus'\n                id='new-chat-plus-button'\n                onClick={() => setSelected(true)}\n              />\n            </div>\n          </div>\n        }\n    </div>\n  )\n}\n\nexport default NewChatForm\n\nconst styles = {\n  newChatContainer: { \n    padding: '16px 14px',\n    backgroundColor: 'white'\n  }\n}","export function timeSinceDate(date) {\n    if (!date) return ''\n\n    const day = date.substr(8,2)\n    const month = date.substr(5,2)\n    const year = date.substr(0,4)\n\n    const hour = date.substr(11,2)\n    const minute = date.substr(14,2)\n    const second = date.substr(17,2)\n\n    var sent = new Date(`${month} ${day} ${year}`)\n    sent.setHours(hour)\n    sent.setMinutes(minute)\n    sent.setSeconds(second)\n    sent = sent.toString()\n\n    const dayStr = sent.substr(0, 10)\n    const timeStr = sent.substr(15, 6)\n    return `${dayStr} at ${timeStr}`\n}\n\nexport function daySinceSent(date) {\n    if (!date) return ''\n    const day = date.substr(8,2)\n    const month = date.substr(5,2)\n    const year = date.substr(0,4)\n    const sent = new Date(`${month} ${day} ${year}`).toString()\n    return sent.substr(4, 6)\n}\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport _ from 'lodash'\n\nimport { daySinceSent } from '../Utilities/dateToString'\n\nconst ChatCard = props => {\n    const { conn, activeChat, setActiveChat } = useContext(ChatEngineContext)\n\n    if (!conn || conn === null) return <div/>\n\n    function readLastMessage(chat) {\n        let readLastMessage = true\n        chat.people.map(chat_person => {\n            if(conn.userName === chat_person.person.username) {\n                readLastMessage = chat.last_message.id === chat_person.last_read\n            }\n        })\n        return readLastMessage\n    }\n\n    const { chat } = props\n    const extraStyle = activeChat === chat.id ? styles.activeChat : {}\n    const otherPerson = chat.people.find(person => person.person.username !== conn.userName);\n    const title = chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title\n    \n    let lastMessage = chat.last_message.text\n    if (!lastMessage) {\n        lastMessage = chat.last_message.attachments.length > 0 ?\n        `${chat.last_message.attachments.length} image${chat.last_message.attachments.length > 1 ? 's' : ''}` :\n        'Say hello!'\n    }\n\n    return (\n        <div \n            onClick={() => setActiveChat(chat.id)}\n            style={{ ...styles.chatContainer, ...extraStyle }}\n            className={`ce-chat-card ${activeChat === chat.id && 'ce-active-chat-card'}`}\n        >\n            <div \n                style={ styles.titleText } \n                className='ce-chat-title-text'\n                id={`ce-chat-card-title-${title}`}\n            >\n                { title }\n                \n                {\n                    !readLastMessage(chat) &&\n                    <div \n                        className='ce-chat-unread-dot'\n                        style={{ \n                            float: 'right',\n                            width: '12px',\n                            height: '12px',\n                            borderRadius: '6px',\n                            backgroundColor: '#1890ff',\n                            display: 'inline-block'\n                        }} \n                    />\n                }\n            </div>\n\n            <div style={{ width: '100%' }} className='ce-chat-subtitle'>\n                <div style={styles.messageText} className='ce-chat-subtitle-text ce-chat-subtitle-message'>\n                    { lastMessage }\n                </div>\n\n                <div \n                    className='ce-chat-subtitle-text ce-chat-subtitle-date'\n                    style={{ ...styles.messageText, ...{ textAlign: 'right', width: '25%' } }}\n                >\n                    { daySinceSent(chat.last_message.created) }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst styles={\n    chatContainer: { \n        padding: '16px', \n        paddingBottom: '12px',\n        cursor: 'pointer'\n    },\n    titleText: { \n        fontWeight: '500',\n         paddingBottom: '4px', \n         whiteSpace: 'nowrap', \n         overflow: 'hidden' \n    },\n    messageText: {\n        width: '75%',\n        color: 'rgba(153, 153, 153, 1)', \n        fontSize: '14px', \n        whiteSpace: 'nowrap', \n        overflow: 'hidden',\n        display: 'inline-block'\n    },\n    activeChat: {\n        backgroundColor: '#d9d9d9',\n        border: '4px solid white',\n        borderRadius: '12px'\n    },\n}\n\nexport default ChatCard;\n","import React, { useContext, useEffect, useRef, useState } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport { getLatestChats } from '../../../actions/chats'\n\nimport _ from 'lodash'\n\nimport ChatLoader from './ChatLoader'\n\nimport ChatForm from './NewChatForm'\nimport ChatCard from './ChatCard'\n\nlet count = 25\nconst interval = 25\n\nconst ChatList = props => {\n    const didMountRef = useRef(false)\n    const [hasMoreChats, setHasMoreChats] = useState(true)\n    const { conn, chats, setChats, activeChat, setActiveChat } = useContext(ChatEngineContext)\n\n    function renderChats(chats) {\n        return chats.map((chat, index) => {\n            if (!chat) {\n                return <div key={`chat_${index}`} />\n\n            } else if (props.renderChatCard) {\n                return <div key={`chat_${index}`}>{props.renderChatCard(chat, index)}</div>\n                \n            } else {\n                return (\n                    <div \n                        key={`chat_${index}`}\n                        onClick={() => props.onChatClick && props.onChatClick()}\n                    >\n                        <ChatCard chat={chat} />\n                    </div>\n                )\n            }\n        })\n    }\n\n    function sortChats(chats) {\n        return chats.sort((a, b) => { \n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\n            return new Date(bDate) - new Date(aDate); \n        })\n    }\n\n    function onGetChats(chats, count) {\n        const chatList = sortChats(chats)\n    \n        if (chatList.length > 0 && activeChat === null) {\n            setActiveChat(chatList[0].id)\n        }\n\n        if(count && count > chatList.length) { setHasMoreChats(false) }\n        \n        const newChats = {...chats}\n        setChats(_.mapKeys(newChats, 'id'))\n    }\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n            getLatestChats(props, interval, (chats) => onGetChats(chats))\n        }\n    })\n\n    function loadChats() {\n        count = count + interval\n        getLatestChats(props, count, (chats) => onGetChats(chats, count))\n    }\n\n    const chatList = sortChats(chats ? Object.values(chats) : [])\n\n    if (props.renderChatList) return props.renderChatList(props)\n\n    return (\n        <div style={styles.chatListContainer} className='ce-chat-list'>\n            <div style={styles.chatsContainer} className='ce-chats-container'>\n                { props.renderNewChatForm ? props.renderNewChatForm(conn) : <ChatForm  /> }\n\n                { renderChats(chatList) } \n\n                { hasMoreChats && chatList.length > 0 && <ChatLoader onVisible={() => loadChats()} /> }\n            </div>\n        </div>\n    )\n}\n\nconst styles={\n    chatListContainer: { \n        height: '100%', \n        maxHeight: '100vh', \n        overflow: 'scroll', \n        overflowX: 'hidden',\n        borderRight: '1px solid #afafaf', \n        backgroundColor: 'white',\n        fontFamily: 'Avenir'\n    },\n    chatsContainer: { \n        width: '100%', \n        height: '100%',\n        backgroundColor: 'white', \n        borderRadius: '0px 0px 24px 24px'\n    },\n}\n\nexport default ChatList;\n","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getMessages(props, chatId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\n\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getLatestMessages(props, chatId, count, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/latest/${count}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\n\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Latest Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function sendMessage(props, chatId, data, callback) {\n    let formdata = new FormData()\n    \n    if (data.attachments) {\n        for (let i = 0; i < data.attachments.length; i++) { \n            formdata.append('attachments', data.attachments[i], data.attachments[i].name)\n        }\n    } else if (data.files) {\n        for (let i = 0; i < data.files.length; i++) { \n            formdata.append('attachments', data.files[i], data.files[i].name)\n        }\n    }\n\n    formdata.append('text', data.text)\n    formdata.append('sender_username', data.sender_username)\n    formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}))\n    \n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\n        formdata,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Send Messages Error', error)\n    });\n    \n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getMessage(props, chatId, messageId, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Message Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function editMessage(props, chatId, messageId, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function readMessage(props, chatId, messageId, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { last_read: messageId },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Read Message Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function deleteMessage(props, chatId, messageId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/${messageId}/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Messages Error', error)\n    });\n}","import React from 'react'\n\nconst AuthFail = () => {\n    return (\n        <div style={{ height: '100%', textAlign: 'center' }}>\n            \n            <div style={{ width: '100%' }}>\n                <img\n                    style={{ width: '40%', paddingTop: '25vh' }}\n                    src='https://chat-engine-assets.s3.amazonaws.com/denied.svg'\n                    alt='welcome-to-chat-engine'\n                />\n            </div>\n\n            <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at <a href='https://chatengine.io'>chatengine.io</a>\n            </div>\n\n        </div>\n    )\n}\n\nexport default AuthFail","import React from 'react'\n\nconst Welcome = () => {\n    return (\n        <div style={{ height: '100%', textAlign: 'center' }}>\n\n            <div style={{ width: '100%' }}>                    \n                <img\n                    style={{ width: '60%', paddingTop: '33vh' }}\n                    src='https://chat-engine-assets.s3.amazonaws.com/welcome.svg'\n                    alt='welcome-to-chat-engine'\n                />\n            </div>\n\n            <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\n                Fill out the \"New Chat\" form to get started.\n            </div>\n\n        </div>\n    )\n}\n\nexport default Welcome\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { SyncOutlined } from '@ant-design/icons'\n\nconst ConnectionBar  = () => {\n    const { connecting } = useContext(ChatEngineContext)\n\n    if (!connecting) return <div />\n\n    return (\n        <div \n            style={{ \n                zIndex: '1',\n                bottom: '66px', \n                left: 'calc(50% - 78px)',\n                position: 'absolute', \n                fontSize: '15px',\n                padding: '10px 22px', \n                color: 'white',\n                backgroundColor: '#fa8c16',\n                borderRadius: '1.3em',\n            }}\n            id='ce-connecting-popup'\n        >\n            <SyncOutlined spin />\n            {' '}\n            Connecting\n        </div>\n    )\n}\n\nexport default ConnectionBar\n","import React, { useState } from 'react'\n\nimport { MenuOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport ChatList from '../../ChatList'\n\nconst ChatListDrawer = props => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <div> \n            <MenuOutlined\n                onClick={() => setIsOpen(true)}\n                style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \n            />\n\n            { \n                isOpen &&\n                <div style={styles.drawerContainer}>\n                    <CloseOutlined\n                        style={styles.closeIcon}\n                        onClick={() => setIsOpen(false)}\n                    />\n\n                    <div style={styles.titleContainer}>\n                        <div style={styles.titleText}>\n                            My Chats\n                        </div>\n                    </div>\n\n                    <ChatList \n                        {...props} \n                        onChatClick={() => setIsOpen(false)}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ChatListDrawer\n\nconst styles = {\n    drawerContainer: { \n        position: 'fixed',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left'\n    },\n    closeIcon: {\n        position: 'absolute',\n        left: '28px',\n        top: '32px'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    }\n}\n","import React, { useState } from 'react'\n\nimport { removePerson } from 'react-chat-engine'\n\nimport { Avatar, Button } from 'react-chat-engine'\n\nconst Person = props => {\n    const [selected, setSelected] = useState(false)\n\n    const { person, chat, conn } = props\n\n    if (!person || !chat) { return <div /> }\n\n    if (!conn || conn === null) return <div />\n\n    function onRemovePerson() {\n        removePerson(\n            props.conn,\n            props.chat.id,\n            props.person.username\n        )\n    }\n\n    function renderPersonText(person) {\n        if (person.first_name && person.first_name !== null) {\n            return `${person.first_name}${person.last_name ? ` ${person.last_name}` : ''}`\n        } else {\n            return person.username\n        }\n    }\n\n    return (\n        <div \n            className='ce-person-container'\n            onMouseEnter={() => setSelected(true)}\n            onMouseLeave={() => setSelected(false)}\n        >\n            <div \n                className='ce-person-avatar'\n                style={{ padding: '2px', height: '0px' }}\n            >\n                <Avatar \n                    avatar={person.avatar} \n                    username={person.username} \n                    is_online={person.is_online}\n                />\n            </div>\n\n            <div\n                className='ce-person-text'\n                style={{ paddingLeft: '52px', height: '44px', position: 'relative', top: '10px', fontSize: '15px' }}\n            >\n                { renderPersonText(person) }\n            </div>\n\n            {\n                selected && (conn.userName === chat.admin.username) && (person.username !== chat.admin.username) &&\n                <div\n                    className='ce-delete-chat' \n                    style={{ float: 'right', height: '0px', position: 'relative', bottom: '44px'}}\n                >\n                    <Button \n                        theme='danger'\n                        icon='delete'\n                        onClick={() => onRemovePerson()}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Person\n","import React, { useState } from 'react';\n\nimport { Avatar } from 'react-chat-engine'\n\n\nconst Option = props => {\n    const [focused, setFocused] = useState(false)\n\n    const { avatar, username } = props.person \n\n    return (\n        <div \n            id={`ce-username-option-${username}`}\n            onMouseEnter={() => setFocused(true)}\n            onMouseLeave={() => setFocused(false)}\n            onClick={() => props.onClick && props.onClick()}\n            style={{ ...styles.option, ...{ backgroundColor: focused ? '#f5f5f5' : 'white'} }}\n        >\n            <div>\n                <Avatar username={username} avatar={avatar} />\n            </div>\n\n            <div style={{ display: 'flex', padding: '12px 4px' }}>\n                {props.person.username}\n            </div>\n        </div>\n    );\n}\n\nexport default Option\n\nconst styles = {\n  option: {\n    padding: '4px 16px',\n    cursor: 'pointer',\n    fontSize: '15px',\n    display: 'flex'\n  },\n}","import React, { useState } from 'react';\n\nimport { addPerson, getOtherPeople } from 'react-chat-engine'\n\nimport { AutoCompleteInput } from 'react-chat-engine'\n\nimport Option from './Option'\n\nconst PersonForm = props => {\n  const [state, setState] = useState({\n    value: '',\n    others: []\n  })\n\n  function handleChange(value) {\n    setState({ ...state, value });\n  }\n\n  function invitePerson(name) {\n    addPerson(\n      props.conn,\n      props.chat.id,\n      name,\n      () => { \n        setState({ ...state, value: '' }); \n        getOthers(); \n      }\n    )\n  }\n\n  function getOthers() {\n    getOtherPeople(\n      props.conn,\n      props.chat.id,\n      (id, others) => setState({ ...state, others }),\n      () => {},\n    )\n  }\n\n  function renderOption(option) {\n    return <Option person={option} onClick={() => invitePerson(option.username)} />\n  }\n\n  return (\n    <div style={{ marginBottom: '12px' }}>\n      <AutoCompleteInput \n        style={{ width: '100%' }}\n        label='Type a username'\n        value={state.value}\n        options={state.others}\n        onFocus={() => getOthers()}\n        handleChange={(value) => handleChange(value)} \n        renderOption={(option) => renderOption(option)}\n      />\n    </div>\n  )\n}\n\nexport default PersonForm\n","import React, { useState } from 'react';\n\nimport Person from './Person'\nimport PersonForm from './PersonForm'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\nconst PeopleSettings = props => {\n    const [state, setState] = useState({\n        collapsed: false,\n        hovered: false\n    })\n    const { chat } = props\n\n    if (chat.is_direct_chat) { return <div /> }\n\n    function renderChatPeople(people, chat) {\n        return people.map((chatPerson, index) => {\n            return (\n                <Person \n                    key={`person_${index}`} \n                    person={chatPerson.person}\n                    conn={props} \n                    chat={chat} \n                />\n            )\n        })\n    }    \n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\n            <div \n                onMouseEnter={() => setState({ ...state, hovered: true })}\n                onMouseLeave={() => setState({ ...state, hovered: false })}\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n                className='ce-section-title-container ce-person-title-container'\n            >\n                <div\n                    className='ce-section-title ce-people-title'\n                    style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\n                    People\n                </div>\n\n                {\n                    state.collapsed ?\n                    <LeftOutlined style={styles.collapseIcon} /> :\n                    <DownOutlined style={styles.collapseIcon} />\n                }\n            </div>\n\n            {\n                !state.collapsed &&\n                <div>\n                    <div style={{ height: '12px' }} />\n\n                    { renderChatPeople(chat.people, chat) }\n\n                    <div style={{ height: '12px' }} />\n\n                    {\n                        props && chat && props.userName === chat.admin.username &&\n                        <PersonForm conn={props} chat={chat} />\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default PeopleSettings\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}","import React from 'react'\n\nconst Thumbnail = props => {\n    const { attachment } = props \n\n    if (!attachment) { return <div /> }\n\n    return (\n        <div style={styles.container} className='ce-photo-thumbnail'>\n            \n            <div style={{ paddingTop: '100%' }} />\n            \n            <img\n                alt={attachment.id}\n                style={styles.image}\n                src={attachment.file}\n                className='ce-photo-img'\n                id={`image-${attachment.id}`}\n            />\n            \n        </div>\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    container: { \n        position: 'relative', \n        width: 'calc(33% - 8px)', \n        border: '1px solid white', \n        display: 'inline-block',\n        cursor: 'pointer'\n    },\n    image: {\n        top: '0px', \n        width: '100%', \n        height: '100%',\n        position: 'absolute',\n        objectFit: 'cover'\n    }\n}","import React, { useState } from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\n\nconst PhotosSettings = props => {\n    const [state, setState] = useState({\n        collapsed: true,\n        hovered: false\n    })\n    const { chat } = props\n\n    function renderPhotos(attachments) {\n        return attachments.map((attachment, index) => {\n            return <Thumbnail key={`person_${index}`} attachment={attachment} />\n        })\n    }\n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }} className='ce-photo-section'>\n            <div \n                onMouseEnter={() => setState({ ...state, hovered: true })}\n                onMouseLeave={() => setState({ ...state, hovered: false })}\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n                className='ce-section-title-container ce-photo-title-container'\n            >\n                <div \n                    className='ce-section-title ce-photo-title'\n                    style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}\n                >\n                    Photos\n                </div>\n\n                {\n                    state.collapsed ?\n                    <LeftOutlined style={styles.collapseIcon} /> :\n                    <DownOutlined style={styles.collapseIcon} />\n                }\n            </div>\n\n            {\n                !state.collapsed &&\n                <div className='ce-photo-feed'>\n                    <div style={{ height: '12px' }} />\n\n                    { renderPhotos(chat.attachments) }\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default PhotosSettings\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}\n","import React, { useState } from 'react'\n\nimport { Button, deleteChat } from 'react-chat-engine'\n\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\n\nconst OptionsSettings = props => {\n    const [state, setState] = useState({\n        collapsed: true,\n        hovered: false\n    })\n    const { chat } = props\n\n    return (\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\n            <div \n                id='ce-options-drop-down'\n                onMouseEnter={() => setState({ ...state, hovered: true })}\n                onMouseLeave={() => setState({ ...state, hovered: false })}\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\n            >\n                <div style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\n                    Options\n                </div>\n\n                {\n                    state.collapsed ?\n                    <LeftOutlined style={styles.collapseIcon} /> :\n                    <DownOutlined style={styles.collapseIcon} />\n                }\n            </div>\n            \n            {\n                !state.collapsed &&\n                <div>\n                    <div style={{ height: '12px' }} />\n\n                    <Button \n                        value=\"Delete\" \n                        theme='danger'\n                        icon='delete'\n                        id='ce-delete-chat-button'\n                        onClick={() => deleteChat(props, chat.id, (data) => {})}\n                        style={{ width: '100%', marginBottom: '12px' }}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default OptionsSettings\n\nconst styles = {\n    collapseIcon: {\n        float: 'right',\n        position: 'relative',\n        bottom: '30px',\n        right: '12px'\n    }\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { editChat, TextInput } from 'react-chat-engine'\n\nconst NewMessageForm = props => {\n    const didMountRef = useRef(false)\n    const [state, setState] = useState({\n        activeChat: null,\n        value: ''\n    })\n  \n    function handleChange(event) {\n        setState({ ...state, value: event.target.value });\n    }\n  \n    function handleSubmit(event) {\n        event.preventDefault();\n\n        editChat(\n            props.conn, \n            props.chat.id,\n            {title: state.value},\n            (data) => {}\n        )\n    }\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n\n        } else {\n            if(state.activeChat !== props.chat.id) {\n                setState({ \n                    ...state,\n                    value: props.chat.title,\n                    activeChat: props.chat.id\n                })\n            }\n        }\n    })\n\n    return (\n        <form onSubmit={(e) => handleSubmit(e)} className='ce-chat-title-form'>\n            <TextInput \n                label=\"Rename this Chat\" \n                value={state.value} \n                default={props.chat.title}\n                handleChange={(e) => handleChange(e)} \n                style={{ \n                    fontSize: '16px',\n                    fontWeight: '600',\n                    textAlign: 'center',\n                    border: '0px solid white',\n                    width: '100%',\n                }}\n            />\n        </form>\n    );\n}\n\nexport default NewMessageForm","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { Avatar } from 'react-chat-engine'\n\nimport TitleForm from './TitleForm'\n\nconst ChatSettingsTop = props => {\n    const { conn } = useContext(ChatEngineContext)\n    const { chat } = props\n    \n    if (!conn || conn === null) return <div />\n\n    const topPeople = chat.people.slice(0, 3)\n    const otherPerson = getOtherPerson(chat.people)\n\n    function renderOnePerson(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function renderTwoPeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username} \n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 44px - 22px + 15px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function renderThreePeople(people) {\n        return (\n            <div style={{ width: '100%', paddingTop: '14px' }}>\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[0].person.username}\n                        avatar={people[0].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 24px - 44px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[1].person.username} \n                        avatar={people[1].person.avatar}\n                    />\n                </div>\n\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 44px - 44px + 24px)' }}>\n                    <Avatar \n                        show_online={false} \n                        username={people[2].person.username}\n                        avatar={people[2].person.avatar}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    function getOtherPerson(people) {\n        return people.find(person => person.person.username !== conn.userName);\n    }\n    \n    return (\n        <div className='ce-chat-settings-container'>\n            <div className='ce-chat-avatars-row'>\n                { topPeople.length === 1 && renderOnePerson(topPeople) }\n                \n                { chat.is_direct_chat && otherPerson && renderOnePerson([otherPerson]) }\n\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 2 && renderTwoPeople(topPeople) }\n\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 3 && renderThreePeople(topPeople) }\n            </div>\n\n            {\n                chat.is_direct_chat && otherPerson ?\n                <div style={{ \n                    paddingTop: '55px',\n                    paddingBottom: '7px',\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    textAlign: 'center',\n                    border: '0px solid white',\n                    width: '100%',\n                }}>\n                    { otherPerson.person.username }\n                </div> :\n                <TitleForm chat={chat} conn={conn} />\n            }\n        </div>\n    )\n}\n\nexport default ChatSettingsTop\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport PeopleSettings from './PeopleSettings'\nimport PhotosSettings from './PhotosSettings'\nimport OptionsSettings from './OptionsSettings'\nimport ChatSettingsTop from './ChatSettingsTop'\n\nconst ChatSettings = props => {\n    const { conn, chats, activeChat } = useContext(ChatEngineContext)  \n    const chat = chats && chats[activeChat] \n\n    if (props.renderChatSettings) return props.renderChatSettings(props)\n    \n    if (!chat) return <div style={styles.filler} />\n    \n    return (\n        <div style={styles.settingsContainer} className='ce-settings'>\n            <div style={{ width: '90%', paddingLeft: '5%' }} className='ce-settings-container'>\n                {\n                    props.renderChatSettingsTop ?\n                    props.renderChatSettingsTop(conn, chat) :\n                    <ChatSettingsTop {...props} chat={chat} />\n                }\n\n                {\n                    props.renderPeopleSettings ?\n                    props.renderPeopleSettings(conn, chat) :\n                    <PeopleSettings {...props} chat={chat} />\n                }\n\n                {\n                    props.renderPhotosSettings ?\n                    props.renderPhotosSettings(chat) :\n                    <PhotosSettings {...props} chat={chat} />\n                }\n\n                {\n                    props && chat && props.userName === chat.admin.username  &&\n                    <div>\n                        {\n                            props.renderOptionsSettings ?\n                            props.renderOptionsSettings(conn, chat) :\n                            <OptionsSettings {...props} chat={chat} />\n                        }\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ChatSettings\n\nconst styles = {\n    settingsContainer: { \n        height: '100%',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        borderLeft: '1px solid #afafaf',\n        backgroundColor: 'white',\n        fontFamily: 'Avenir'\n    },\n    filler: { \n        display: 'flex',\n        width: '90%',\n        paddingLeft: '5%',\n        borderLeft: '1px solid #afafaf'\n    }\n}","import React, { useState } from 'react'\n\nimport { SettingOutlined, CloseOutlined } from '@ant-design/icons'\n\nimport ChatSettings from '../../ChatSettings'\n\nconst ChatSettingsDrawer = props => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <div> \n            <SettingOutlined\n                onClick={() => setIsOpen(true)}\n                style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \n            />\n\n            { \n                isOpen &&\n                <div style={styles.drawerContainer}>\n                    <CloseOutlined\n                        style={styles.closeIcon}\n                        onClick={() => setIsOpen(false)}\n                    />\n\n                    <div style={styles.titleContainer}>\n                        <div style={styles.titleText}>\n                            Chat Settings\n                        </div>\n                    </div>\n\n                    <ChatSettings {...props} />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ChatSettingsDrawer\n\nconst styles = {\n    drawerContainer: { \n        position: 'fixed',\n        zIndex: '1',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        textAlign: 'left'\n    },\n    closeIcon: {\n        position: 'absolute',\n        left: '28px',\n        top: '32px'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '24px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n}\n","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { timeSinceDate } from '../../Utilities/dateToString'\n\nimport ChatListDrawer from './ChatListDrawer'\nimport ChatSettingsDrawer from './ChatSettingsDrawer'\n\nimport { Row, Col } from 'react-grid-system'\n\nimport { setConfiguration } from 'react-grid-system';\n \nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nconst ChatHeader = () => {\n    const { conn, chats, activeChat } = useContext(ChatEngineContext)\n\n    if (!chats || !activeChat || !chats[activeChat]) { return <div /> }\n\n    if (!conn || conn === null) { return <div /> }\n\n    const chat = chats[activeChat]\n    const otherPerson = chat.people.find(person => person.person.username !== conn.userName);\n    const title = chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title\n\n    return (\n        <Row \n            className='ce-chat-title'\n            style={styles.titleSection}\n        >\n            <Col \n                xs={2} \n                sm={0} \n                style={{ ...styles.mobileOptiom, ...{ left: '6px' } }}\n                className='ce-chat-list-mobile-option'\n            >\n                <ChatListDrawer />\n            </Col>\n\n            <Col \n                xs={8}\n                sm={12}\n                style={styles.titleContainer} \n                className='ce-chat-title-container'\n            >\n                <div \n                    style={styles.titleText} \n                    className='ce-chat-title-text' \n                    id={`ce-chat-feed-title-${title}`}\n                >\n                    { title }\n                </div>\n                \n                <div style={styles.subtitleText} className='ce-chat-subtitle-text'>\n                    {\n                        chat.last_message.created && chat.last_message.created.length > 0 ?\n                        `Active ${timeSinceDate(chat.last_message.created)}` :\n                        'Say hello!'\n                    }\n                </div>\n            </Col>\n\n            <Col \n                xs={2} \n                sm={0} \n                style={{ ...styles.mobileOptiom, ...{ right: '6px' } }}\n                className='ce-chat-settings-mobile-option'\n            >\n                <ChatSettingsDrawer />\n            </Col>\n        </Row>\n    );\n}\n\nexport default ChatHeader\n\nconst styles = {\n    titleSection: { \n        position: 'absolute',\n        top: '0px',\n        width: '100%',\n        zIndex: '1',\n        backgroundColor: 'rgb(256, 256, 256, 0.92)',\n        fontFamily: 'Avenir',\n    },\n    mobileOptiom: {\n        width: '100%',\n        top: '32px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n        overflow: 'hidden'\n    },\n    titleContainer: {\n        width: '100%',\n        padding: '18px 0px',\n        textAlign: 'center',\n        color: 'rgb(24, 144, 255)',\n    },\n    titleText: {\n        fontSize: '24px',\n        fontWeight: '600',\n    },\n    subtitleText: {\n        fontSize: '12px',\n    }\n}\n","import React, { useState, useRef, useEffect, useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nconst RenderTrigger = props => {\n    const { setLoadMoreMessages } = useContext(ChatEngineContext)\n\n    function useOnScreen(ref) {\n        const [isIntersecting, setIntersecting] = useState(false)\n      \n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                setIntersecting(entry.isIntersecting)\n                \n                if (entry.isIntersecting) { \n                    props.onEnter && props.onEnter()\n                } else {\n                    props.onLeave && props.onLeave()\n                }\n            }\n        )\n      \n        useEffect(() => {\n          observer.observe(ref.current)\n          // Remove the observer as soon as the component is unmounted\n          return () => { observer.disconnect() }\n        }, [])\n      \n        return isIntersecting\n    }\n  \n    const ref = useRef()\n    const isVisible = useOnScreen(ref)\n    \n    return <div ref={ref} />\n}\n\nexport default RenderTrigger","import React from 'react'\n\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst suffix = [\n  'st', 'nd', 'rd', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'st', 'nd', 'rd', 'th', 'th',\n  'th', 'th', 'th', 'th', 'th',\n  'st'\n]\n\nconst DatePartition = props => {\n    function getDate(date) {\n        return date ? date.substr(0, 10) : null\n    }\n\n    function formatDate(date_time) {\n        if (!date_time) return ''\n        \n        const year = date_time.substr(0, 4)\n        const month = months[parseInt(date_time.substr(5, 2)) - 1]\n        const day = date_time.substr(8, 2)\n        const dayDuffix = suffix[parseInt(date_time.substr(8, 2)) - 1]\n\n        var time = date_time.substr(11, 5)\n        var timeSuffix = ''\n\n        if(parseInt(time.substr(0, 2)) >= 12){\n            if(parseInt(time.substr(0, 2)) > 12){\n            time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2)\n            }\n            timeSuffix = 'PM'\n\n        } else {\n            timeSuffix = 'AM'\n        }\n\n        return time + timeSuffix + ', ' + month + ' ' + day + dayDuffix + ', ' + year\n    }\n\n    const { lastCreated, created } = props\n\n    const lastDate = getDate(lastCreated)\n    const thisDate = getDate(created)\n\n    if (lastCreated && lastDate === thisDate ) {\n        return <div />\n    }\n\n    return (\n        <div style={styles.dateText} className='ce-message-date-text'>\n            { formatDate(created) }\n        </div>\n    )\n}\n\nexport default DatePartition\n\nconst styles = {\n    dateText: { \n        width: '100%', \n        textAlign: 'center',\n        paddingTop: '4px',\n        paddingBottom: '10px',\n        fontSize: '15px',\n        color: 'rgba(0, 0, 0, .40)'\n    }\n}","import React, { useState } from 'react'\n\nimport { LoadingOutlined } from '@ant-design/icons'\n\nconst Thumbnail = props => {\n    const [hovered, setHovered] = useState(false)\n    const { attachment } = props\n    const style={ \n        ...styles.thumbnail, \n        ...{ border: hovered ? '1px solid #1890ff' : '0px' } \n    }\n\n    if (!attachment) {\n        return (\n            <div style={styles.loadingContainer}>\n                <LoadingOutlined  style={{ color: 'white', padding: '4px', fontSize: '28px' }} />\n            </div>\n        )\n    }\n\n    return (\n        <img \n            onClick={() => window.open(attachment.file)}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            src={attachment.file}\n            alt={'thumb-nail'}\n            style={style}\n        />\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    loadingContainer: {\n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline-block', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        marginRight: '2px',\n\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n        backgroundColor: '#d9d9d9',\n    },\n    thumbnail: { \n        width: '100%', \n        cursor: 'pointer',\n        textAlign: 'right', \n        display: 'inline', \n        objectFit: 'cover',\n        borderRadius: '0.3em',\n        paddingRight: '2px',\n\n        height: '30vw', \n        width: '30vw', \n        maxHeight: '200px',\n        maxWidth: '200px',\n        minHeight: '100px',\n        minWidth: '100px',\n    }\n}","\n\nconst colors = [\n    '#D64045',\n    '#5B3000',\n    '#00CC99',\n    '#467599',\n    '#1D3354',\n    '#8F250C',\n    '#6153CC',\n    '#961D4E',\n    '#A29F15',\n    '#0CAADC',\n    '#FF5154',\n    '#FA7921',\n    '#688E26',\n    '#550527',\n    '#A10702',\n    '#FF1053',\n    '#6C6EA0',\n    '#100B00',\n]\n\nfunction stringToNumber(str){\n    let sum = 0\n    for (var i = 0; i < str.length; i++) {\n        sum = sum + (str.charCodeAt(i) * i) - 97\n    }\n    return sum\n}\n\nexport function stringToColor(str) {\n    if (!str) {\n        return 'black'\n    } else {\n        return colors[stringToNumber(str) % colors.length]\n    }\n}","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Dot extends Component {\n    state = { avatar: '' }\n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username } = this.props\n        const color = stringToColor(username)\n        const customStyle = this.props.style ? this.props.style : {}\n        \n        return (\n            <div\n                className='ce-avatar-dot'\n                style={{\n                    ...styles.dot,\n                    ...customStyle,\n                    ...{\n                        backgroundColor: this.state.avatar ? 'white' : color,\n                        backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundSize: '14px'\n                    }\n                }}\n            />\n        )\n    }\n}\n\nconst styles = {\n    dot: {\n        width: '13px',\n        height: '13px',\n        borderRadius: '13px',\n        textAlign: 'center',\n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport Dot from '../../../components/Avatar/Dot'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nconst Message = props => {\n    function renderReads() {\n        const { chat, message } = props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((chatPerson, index) => {\n            if (message.id === chatPerson.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={chatPerson.person.avatar}\n                        username={chatPerson.person.username}\n                        style={{ float: 'right', marginLeft: '4px' }} \n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    function renderAttachments() {\n        const { message } = props\n        const attachments = message && message.attachments ? message.attachments : []\n        return attachments.map((attachment, index) => {\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\n        })\n    }\n\n    \n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments && message.attachments\n\n    const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n    return (\n        <div \n            className='ce-message-row ce-my-message'\n            style={{ width: '100%', textAlign: 'right', paddingBottom }}\n        >\n            <div \n                style={{ display: 'auto' }} \n                className='ce-my-message-attachments-container'\n            >\n                { renderAttachments() }\n            </div>\n\n            <Row\n                style={{ paddingRight: '2px' }} \n                className='ce-message-bubble-row ce-my-message-bubble-row'\n            >\n                <Col xs={1} sm={2} md={3} />\n\n                <Col xs={11} sm={10} md={9}>\n                    {\n                        !attachments || message.text && \n                        <div\n                            className='ce-message-bubble ce-my-message-bubble'\n                            style={{ ...styles.myMessage, ...{ borderRadius } }}\n                        >\n                            { message.text }\n                        </div>\n                    }\n                </Col>\n\n                <Col xs={1} sm={2} md={3} />\n\n                <Col xs={12} className='ce-reads-row ce-my-reads-row'>\n                    { renderReads() }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Message\n\nconst styles = {\n    myMessage: {\n        color: 'white', \n        cursor: 'pointer',\n        float: 'right', textAlign: 'left', // Stay right but render text\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: 'rgb(24, 144, 255)', \n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport { Avatar, Dot } from 'react-chat-engine'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\n\nconst TheirMessage = props => {\n    function renderReads() {\n        const { chat, message } = props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((person, index) => {\n            if (message.id === person.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={person.person.avatar}\n                        username={person.person.username}\n                        style={{ float: 'left', marginLeft: '4px' }}\n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    function renderAttachments() {\n        const { message } = props\n        const attachments = message && message.attachments ? props.message.attachments : []\n        return attachments.map((attachment, index) => {\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\n        })\n    }\n\n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments && message.attachments\n\n    const topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `${topLeftRadius} 1.3em 1.3em ${bottomLeftRadius}`\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n    return (\n        <div \n            style={{ width: '100%', paddingBottom }}\n            className='ce-message-row ce-their-message'\n        >\n            {\n                (!lastMessage || lastMessage.sender_username !== message.sender_username) &&\n                <div style={styles.nameText} className='ce-their-message-sender'>\n                    { message.sender_username }\n                </div>\n            }\n        \n            <Row style={{ paddingLeft: '2px' }} className='ce-their-message-row'>\n                <Col xs={11} sm={10} md={9}>\n                    <div style={{ height: '0px' }} className='ce-their-message-avatar'>\n                        {\n                            (!nextMessage || nextMessage.sender_username !== message.sender_username) &&\n                            <Avatar\n                                show_online={false}\n                                username={message.sender_username}\n                                avatar={message.sender && message.sender.avatar}\n                            />\n                        }\n\n                    </div>\n\n                    <div \n                        style={{ display: 'auto', paddingLeft: '50px' }}\n                        className='ce-their-message-attachments-container'\n                    >\n                        { renderAttachments() }\n                    </div>\n\n                    {\n                        !attachments || message.text &&\n                        <div style={{ paddingLeft: '48px' }}>\n                            <div\n                                className='ce-message-bubble ce-their-message-bubble'\n                                style={{ ...styles.theirMessage, ...{ borderRadius } }}\n                            >\n                                { message.text }\n                            </div>\n                        </div>  \n                    }\n                </Col>\n\n                {/* Col is 9 to not slipp into RHS */}\n                <Col \n                    xs={9} \n                    style={{ marginLeft: '48px' }} \n                    className='ce-reads-row ce-their-reads-row'\n                >\n                    { renderReads() }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default TheirMessage\n\nconst styles = {\n    theirMessage: {\n        cusor: 'auto',\n        color: 'black', \n        float: 'left',\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: '#f1f0f0', \n    },\n    nameText: { \n        paddingLeft: '62px', \n        paddingBottom: '2px', \n        color: 'rgba(0, 0, 0, .40)', \n        fontSize: '15px' \n    }\n}","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nimport Dot from '../../../components/Avatar/Dot'\n\nimport { Row, Col, setConfiguration } from 'react-grid-system'\n\nsetConfiguration({ maxScreenClass: 'xl' })\n\nconst SendingMessage = props => {\n    function renderReads() {\n        const { chat, message } = props\n\n        if(!chat) { return <div /> }\n\n        return chat.people.map((chatPerson, index) => {\n            if (message.id === chatPerson.last_read) {\n                return (\n                    <Dot \n                        key={`read_${index}`}\n                        avatar={chatPerson.person.avatar}\n                        username={chatPerson.person.username}\n                        style={{ float: 'right', marginLeft: '4px' }} \n                    />\n                )\n            }\n            return <div key={`read_${index}`} />\n        })\n    }\n\n    function renderAttachments(attachments) {\n        return attachments.map((a, index) => {\n            return <Thumbnail key={`sending-file-${index}`} />\n        })\n    }\n\n    const { lastMessage, message, nextMessage } = props\n\n    if (!message) { return <div /> }\n\n    const attachments = message && message.attachments ? message.attachments : []\n\n    const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n    const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\n\n    const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\n\n    return (\n        <div \n            className='ce-message-row ce-my-message ce-my-message-sending'\n            style={{ width: '100%', textAlign: 'right', paddingBottom }}\n        >\n            <div \n                style={{ display: 'auto' }} \n                className='ce-my-message-attachments-container'\n            >\n                { renderAttachments(attachments) }\n            </div>\n\n            <Row\n                style={{ paddingRight: '2px' }} \n                className='ce-message-bubble-row ce-my-message-bubble-row ce-my-message-sending-row'\n            >\n                <Col xs={1} sm={2} md={3} />\n\n                <Col xs={11} sm={10} md={9}>\n                    {\n                        message.text &&\n                        <div\n                            className='ce-message-bubble ce-my-message-bubble'\n                            style={{ ...styles.myMessage, ...{ borderRadius } }}\n                        >\n                            { message.text }\n                        </div>\n                    }\n                </Col>\n                \n                <Col xs={1} sm={2} md={3} />\n            </Row>\n        </div>\n    )\n}\n\nexport default SendingMessage\n\nconst styles = {\n    myMessage: {\n        color: 'white', \n        cursor: 'pointer',\n        float: 'right', textAlign: 'left', // Stay right but render text\n        padding: '12px',\n        fontSize: '15px',\n        whiteSpace: 'pre-line',\n        backgroundColor: '#40a9ff', \n    }\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../../Context'\n\nimport DatePartition from './DatePartition'\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\nimport SendingMessage from './SendingMessage'\n\nconst Message = props => {\n    const { lastMessage, message, nextMessage, sending, chat } = props\n\n    const { conn } = useContext(ChatEngineContext)\n\n    if (!message || !chat) { return <div /> }\n\n    if (!conn || conn === null) { return <div /> }\n\n    return (\n        <div className='ce-message-and-date'>\n            {\n                !sending &&\n                <DatePartition \n                    lastCreated={lastMessage ? lastMessage.created : null} \n                    created={message.created} \n                />\n            }\n\n            {\n                sending ? \n                <SendingMessage \n                    chat={chat} \n                    conn={conn} \n                    lastMessage={lastMessage} \n                    message={message} \n                    nextMessage={nextMessage} \n                /> :\n                <div>\n                    {\n                        message.sender_username === conn.userName || message.sender_username === conn.senderUsername ?\n                        <MyMessage \n                            chat={chat}\n                            conn={conn}\n                            lastMessage={lastMessage}\n                            message={message}\n                            nextMessage={nextMessage}\n                        /> :\n                        <TheirMessage \n                            chat={chat}\n                            conn={conn}\n                            lastMessage={lastMessage}\n                            message={message}\n                            nextMessage={nextMessage}\n                        />\n                    }\n                </div>\n            }\n        </div>\n    ) \n}\n\nexport default Message","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { RenderTrigger } from '../Triggers'\n\nimport MessageBubble from './MessageBubbles/index'\n\nconst Messages = props => {\n    const { \n        conn,\n        chats,\n        messages,\n        activeChat,\n        setLoadMoreMessages,\n        setIsBottomVisible,\n    } = useContext(ChatEngineContext)\n\n    const chat = chats && chats[activeChat]\n    const keys = Object.keys(messages)\n\n    if (!conn || conn === null) return <div />\n    \n    return keys.map((key, index) => {\n        const message = messages[key]\n        const lastMessageKey = index === 0 ? null : keys[index - 1]\n        const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\n\n        if (props.renderMessageBubble) {\n            return (\n                <div key={`message_${index}`}>\n                    { \n                        props.renderMessageBubble(\n                            conn, \n                            chat, \n                            messages[lastMessageKey], \n                            message, \n                            messages[nextMessageKey]\n                        ) \n                    }\n                </div>\n            )\n        }\n        \n        return (\n            <div key={`message_${index}`} id={`ce-message-${message.id}`}>\n                {/* Scroll down if the top of last msg is visible */}\n                { \n                    index === keys.length - 1 && \n                    <RenderTrigger \n                        onEnter={() => setIsBottomVisible(true)}\n                        onLeave={() => setIsBottomVisible(false)}\n                    />\n                }\n\n                <MessageBubble \n                    chat={chat}\n                    message={message}\n                    lastMessage={messages[lastMessageKey]}\n                    nextMessage={messages[nextMessageKey]}\n                />\n\n                {/* Load more if the bottom of top msg is visible */}\n                { \n                    index === 0 && \n                    <RenderTrigger onEnter={() => setLoadMoreMessages(true)} /> \n                }\n            </div>\n        )\n    })\n}\nexport default Messages","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport MessageBubble from './MessageBubbles/index'\n\nconst SendingMessages = props => {\n    const { \n        conn,\n        chats,\n        activeChat,\n        sendingMessages,\n    } = useContext(ChatEngineContext)\n    \n    const keys = Object.keys(sendingMessages)\n    const chat = chats && chats[activeChat]\n\n    if (!conn || conn === null) return <div />\n\n    return keys.map((key, index) => {\n        const message = sendingMessages[key]\n        const lastMessageKey = index === 0 ? null : keys[index - 1]\n        const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\n\n        if(message && message.chat === activeChat) {\n            return (\n                <MessageBubble \n                    sending\n                    key={`sending-msg-${index}`}\n                    chat={chat}\n                    message={message}\n                    lastMessage={sendingMessages[lastMessageKey]}\n                    nextMessage={sendingMessages[nextMessageKey]}\n                />\n            )\n        }\n    })\n}\nexport default SendingMessages","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport { stringToColor } from '../Utilities/colorMapping'\n\nconst Typers = props => {\n    const { conn, activeChat, typingCounter } = useContext(ChatEngineContext)\n    const typers = typingCounter && typingCounter[activeChat] ? typingCounter[activeChat] : []\n\n    if (!conn || conn === null) return <div />\n\n    if (props.renderIsTyping) { return props.renderIsTyping(typers) }\n\n    return (\n        <div>\n            {\n                Object.keys(typers).map((username, index) => {\n                    if (conn.userName !== username && props.currentTime < typers[username] + 2000) {\n                        return (\n                            <div \n                                key={`typer_${index}`} \n                                style={{ color: stringToColor(username), padding: '2px', paddingLeft: '12px' }}\n                            >\n                                {`${username} is typing...`}\n                            </div>\n                        )\n\n                    } else {\n                        return <div key={`typer_${index}`} />\n                    }\n                })\n            }\n        </div>\n    )\n}\nexport default Typers","import React, { useState, useEffect } from 'react'\n\nimport { CloseCircleTwoTone } from '@ant-design/icons'\n\nconst Thumbnail = props => {\n    const [hovered, setHovered] = useState(false)\n    const [blob, setBlob] = useState('')\n    useEffect(() => {\n      setBlob(URL.createObjectURL(props.file))\n    }, [props.file])\n    return (\n        <div \n            style={{ padding: '12px 6px', display: 'inline-block', position: \"relative\" }}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n        >\n            \n            <img\n                style={styles.imageSquare}\n                alt={props.file ? props.file.name : ''}\n                src={blob}\n            />\n\n            {\n                hovered &&\n                <CloseCircleTwoTone \n                    style={styles.closeIcon} \n                    onClick={() => props.onRemove && props.onRemove()}\n                />\n            }\n        </div>\n    )\n}\n\nexport default Thumbnail\n\nconst styles = {\n    imageSquare: { \n        height: '108px', \n        width: '108px', \n        border: '1px solid #afafaf',\n        borderRadius: '8px',\n        objectFit: 'cover',\n        display: 'inline',\n    },\n    closeIcon: {\n        position: 'absolute', \n        bottom: 'calc(100% - 32px)', \n        left: '96px', \n        width: '0px', \n        cursor: 'pointer'\n    }\n}\n","import React from 'react'\n\nimport Thumbnail from './Thumbnail'\n\nconst FileRow = props => {\n    function renderFiles() {\n        return props.files.map((file, index) => {\n            return (\n                <Thumbnail \n                    file={file} \n                    key={`thumb_${index}`} \n                    onRemove={() => props.onRemove && props.onRemove(index)}\n                />\n            )\n        })\n    }\n  \n    return (\n        <div style={{ width: 'calc(100% - 24px)', paddingLeft: '12px' }}>\n            { renderFiles() }\n        </div>\n    )\n}\n\nexport default FileRow","import React, { useState } from 'react';\n\nimport { PaperClipOutlined } from '@ant-design/icons'\n\nconst ImagesInput = props => {\n    const [state, setState] = useState({\n        hovered: false,\n    })\n\n    function onSelect(event) {\n        const files = Array.from(event.target.files)\n        props.onSelectFiles &&  props.onSelectFiles(files)\n    }\n\n    return (\n        <form\n            className=\"uploader\"\n            encType=\"multipart/form-data\"\n            style={{ height: '0px' }}\n        >\n            <label\n                htmlFor=\"files\"\n                id='upload-document-button'\n            >\n                <PaperClipOutlined \n                    onMouseEnter={() => setState({ ...state, hovered: true })}\n                    onMouseLeave={() => setState({ ...state, hovered: false })}\n                    style={{\n                        ...{ cursor: 'pointer', position: 'absolute', bottom: '20px', right: '63px', fontSize: '18px' },\n                        ...{ color: state.hovered ? '#69c0ff' : '#1890ff' }\n                    }}\n                />\n            </label>\n\n            <input\n                multiple\n                id=\"files\"\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                style={{ visibility: \"hidden\" }}\n                type=\"file\"\n                onChange={(e) => onSelect(e)}\n                onClick={(e) => e.target.value = null}\n            />\n        </form>\n    );\n}\n\nexport default ImagesInput\n","import React, { Component } from 'react'\n\nexport default class MessageInput extends Component {\n    state = {\n        focused: false,\n        value: null,\n        height: 0\n    }\n\n    resize() {\n        var textarea = document.getElementById(\"msg-textarea\");\n        textarea.style.height = \"\";\n        textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\n        this.setState({ height: Math.min(textarea.scrollHeight, 150) })\n    }\n\n    componentDidMount() { this.resize() }\n\n    handleChange(e) {\n        this.resize()\n        this.props.handleChange && this.props.handleChange(e)\n    }\n\n    onKeyDown(e) {\n        if (e.key === 'Enter') { \n            e.preventDefault()\n\n            if (this.props.value.length > 0) {\n                this.props.onSubmit && this.props.onSubmit(e) \n            }\n        }\n    }    \n\n    render() {\n        const style = { \n            ...styles.input, \n            ...{ overflowY: this.state.height === 150 ? 'scroll' : 'hidden' } \n        }\n\n        return (\n            <textarea \n                id='msg-textarea'\n                className='ce-input ce-textarea-input'\n                rows='1'\n                style={style}\n                value={this.props.value}\n                placeholder={this.props.label}\n                onBlur={() => this.setState({ focused: false })}\n                onFocus={() => this.setState({ focused: true })}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.handleChange(e)} \n                onKeyDown={(e) => this.onKeyDown(e)}\n            />\n        )\n    }\n}\n\nconst styles = {\n    input: { \n        border: '1px solid white',\n        width: 'calc(100% - 64px - 24px - 44px)',\n        outline: 'none', \n        fontSize: '15px',\n        fontFamily: 'Avenir',\n        paddingLeft: '12px',\n        paddingRight: '12px',\n        position: 'relative', \n        left: '12px',\n        resize: 'none', \n        overflowX: 'hidden'\n    }\n}","import React, { useContext, useState } from 'react'\n\nimport { ChatEngineContext } from '../../../Context'\n\nimport { sendMessage, isTyping } from 'react-chat-engine'\n\nimport FileRow from './FileRow'\nimport ImagesInput from './ImagesInput'\nimport MessageInput from './MessageInput'\n\nimport { Button } from 'react-chat-engine'\n\nconst NewMessageForm = () => {\n  const { conn, activeChat, sendingMessages, setSendingMessages } = useContext(ChatEngineContext)\n  const [state, setState] = useState({\n    trigger: 0,\n    mod: 3,\n    value: '',\n    attachments: []\n  })\n\n  if (!conn || conn === null) return <div />\n\n  function onRemove(index) {\n    let { attachments } = state \n    attachments.splice(index, 1)\n    setState({ ...state, attachments })\n  }\n  \n  function handleChange(event) {\n    setState({\n      ...state,\n      value: event.target.value,\n      trigger: (state.trigger + 1) % state.mod\n    });\n    \n    if (state.trigger === 1) {\n      isTyping(conn, activeChat)\n    }\n  }\n  \n  function handleSubmit(event) {\n    event.preventDefault();\n\n    const { attachments } = state\n    const text = state.value.trim()\n    const custom_json = { sender_id: Date.now().toString() }\n    const sender_username = conn.userName ? conn.userName : conn.senderUsername\n    const data = { text, attachments, custom_json, sender_username, chat: activeChat }\n\n    if (text.length > 0 || attachments.length > 0) {\n      sendMessage(conn, activeChat, data, (data) => {})\n    }\n\n    setState({ ...state, value: '', attachments: [] })\n    \n    // TODO: Should be in Text Area Input\n    var textarea = document.getElementById(\"msg-textarea\")\n    textarea.style.height = \"24px\"\n\n    let newSendingMessages = {...sendingMessages}\n    newSendingMessages[data.custom_json.sender_id] = data\n    setSendingMessages(newSendingMessages)\n  }\n\n  return (\n    <div \n      id='msg-form-container'\n      style={styles.NewMessageFormContainer}\n      className='ce-message-form-container'\n    >\n      <FileRow files={state.attachments} onRemove={(i) => onRemove(i)} />\n\n      <ImagesInput onSelectFiles={(attachments) => setState({ ...state, attachments })} />\n\n      <form onSubmit={handleSubmit.bind(this)} className='ce-message-form'>\n        <div style={styles.inputContainer} className='ce-message-input-form'>\n          <MessageInput\n            value={state.value}\n            label='Send a message...'\n            handleChange={handleChange.bind(this)}\n            onSubmit={handleSubmit.bind(this)}\n          />\n\n          <Button \n            icon='send'\n            type=\"submit\"\n            id='ce-send-message-button'\n            style={{ position: 'absolute', bottom: '10px', right: '6px' }}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default NewMessageForm\n\nconst styles = {\n  NewMessageFormContainer: { \n    position: 'absolute', \n    bottom: '0px', \n    width: '100%', \n    backgroundColor: 'white',\n  },\n  inputContainer: { \n    minHeight: '36px',\n    paddingTop: '10px',\n    paddingBottom: '6px',\n  },\n}","import React, { useContext, useState, useEffect, useRef } from 'react'\n\nimport { ChatEngineContext } from '../../Context'\n\nimport { getLatestMessages, readMessage } from '../../../actions/messages'\n\nimport { AuthFail, ConnectionBar, Welcome } from './Steps'\n\nimport ChatHeader from './ChatHeader'\nimport Messages from './Messages'\nimport SendingMessages from './Messages/SendingMessages'\nimport Typers from './Typers'\nimport NewMessageForm from './NewMessageForm'\n\nimport _ from 'lodash'\n\nimport { animateScroll } from \"react-scroll\"\n\nconst initial = 45\nlet count = initial\nconst interval = 33\n\nconst ChatFeed = props => {\n    const didMountRef = useRef(false)\n    const [duration, setDuration] = useState(0)\n    const [currentChat, setCurrentChat] = useState(null)\n    const [currentTime, setCurrentTime] = useState(Date.now())\n    const { \n        conn,\n        chats, setChats,\n        sendingMessages,\n        messages, setMessages,\n        activeChat, setActiveChat,\n        loadMoreMessages, setLoadMoreMessages,\n        isBottomVisible,\n    } = useContext(ChatEngineContext)\n\n    function onReadMessage(chat) {\n        if (chats) {\n            const newChats = {...chats}\n            newChats[chat.id] = chat\n            setChats(newChats)\n        }\n    }\n\n    function onGetMessages(chatId, messages, scrollDownTo) {\n        setMessages(_.mapKeys(messages, 'id'))\n\n        if (messages.length > 0) {\n            const message = messages[messages.length - 1]\n\n            if (props.userName && props.userName !== message.sender_username) {\n                readMessage(conn, chatId, message.id, (chat) => onReadMessage(chat))\n            }\n        }\n\n        if (scrollDownTo) {\n            animateScroll.scrollToBottom({ duration: 0, containerId: scrollDownTo })\n        }\n        \n        props.onGetMessages && props.onGetMessages(chatId, messages)\n    }\n\n    function loadMessages(loadMoreMessages) {\n        // Message Loader triggers\n        if (loadMoreMessages) { \n            count = count + interval\n            setLoadMoreMessages(false)\n\n            getLatestMessages(\n                conn, activeChat, count, \n                (chatId, messages) => onGetMessages(chatId, messages, false)\n            )\n\n        // Active Chat passed by context\n        } else if (conn && !props.activeChat && activeChat !== null && activeChat !== currentChat) {\n            count = initial\n            setCurrentChat(activeChat)\n\n            getLatestMessages(\n                conn, activeChat, count, \n                (chatId, messages) => onGetMessages(chatId, messages, \"ce-feed-container\")\n            )\n\n        // Active Chat passed by props\n        } else if (conn && props.activeChat && props.activeChat !== currentChat) {\n            count = initial\n            setActiveChat(props.activeChat)\n            setCurrentChat(props.activeChat)\n\n            getLatestMessages(\n                conn, props.activeChat, count, \n                (chatId, messages) => onGetMessages(chatId, messages, \"ce-feed-container\")\n            )\n        }\n    }\n\n    useEffect(() => { loadMessages(false) }, [conn, activeChat, currentChat])\n    useEffect(() => { loadMessages(loadMoreMessages) }, [loadMoreMessages])\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n            \n            setTimeout(() => {\n                setDuration(100)\n            }, 3000) // Start animating scroll post-load\n\n            setInterval(() => {\n                setCurrentTime(Date.now())\n            }, 1000) // Check time every second\n\n        } else {\n            // Scroll on new incoming messages\n            if(!_.isEmpty(messages)) {\n                animateScroll.scrollToBottom({\n                    duration,\n                    containerId: \"ce-feed-container\"\n                })\n            }\n        }\n    }, [sendingMessages, messages, isBottomVisible])\n\n\n    const chat = chats && chats[currentChat] \n\n    if(props.renderChatFeed) {\n        return props.renderChatFeed(props)\n    \n    } else if (conn === undefined) {\n        return <AuthFail />\n    \n    } else if (conn && chats !== null && _.isEmpty(chats)) {\n        return <Welcome />\n    }\n\n    return (\n        <div \n            className='ce-chat-feed'\n            style={{ height: '100%', maxHeight: '100vh', backgroundColor: '#f0f0f0' }}\n        >\n            { props.renderChatHeader ?  props.renderChatHeader(chat) : <ChatHeader /> }\n\n            <div\n                id='ce-feed-container'\n                style={styles.feedContainer} \n                className='ce-chat-feed-container'\n            >\n                <div style={{ height: '88px' }} className='ce-feed-container-top' />\n\n                <Messages {...props} />\n\n                <SendingMessages {...props} />\n\n                <Typers currentTime={currentTime} />\n\n                <ConnectionBar />\n\n                <div style={{ height: '54px' }} className='ce-feed-container-bottom' />\n            </div>\n\n            { props.renderNewMessageForm ? props.renderNewMessageForm(props, currentChat) : <NewMessageForm /> }\n        </div>\n    )\n}\n\nexport default ChatFeed\n\nconst styles = {\n    feedContainer: { \n        width: '100%',\n        height: '100%',\n        maxHeight: '100vh',\n        overflowX: 'hidden',\n        overflowY: 'scroll',\n        backgroundColor: 'white',\n        fontFamily: 'Avenir',\n    }\n}","import React, { useContext } from 'react'\n\nimport { ChatEngineContext } from '../Context'\n\nimport _ from 'lodash'\n\nimport Socket from '../Socket'\n\nimport ChatList from './ChatList'\nimport ChatFeed from './ChatFeed'\nimport ChatSettings from './ChatSettings'\n\nimport { Row, Col } from 'react-grid-system'\nimport { setConfiguration } from 'react-grid-system';\n \nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\n\nconst ChatEngine = props => {\n  const context = useContext(ChatEngineContext)\n  const { height } = props\n  const propsAndContext = {...props, ...context}\n\n  return (\n    <div style={{ textAlign: 'left', backgroundColor: 'white' }}>\n      <Socket {...props} />\n\n      <Row>\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\n          <ChatList {...propsAndContext} />\n        </Col>\n\n        <Col xs={12} sm={6} style={{ height: height ? height : '' }}>\n          <ChatFeed {...propsAndContext} />\n        </Col>\n\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\n          <ChatSettings { ...propsAndContext} />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ChatEngine","import React, { useContext } from 'react'\n\nimport ChatEngine from './ChatEngine'\n\nimport { ChatEngineWrapper, ChatEngineContext } from './Context'\n\nconst ChatEngineApp = (props) => {\n    if (useContext(ChatEngineContext)) {\n        return <ChatEngine {...props} />\n    } else {\n        return <ChatEngineWrapper><ChatEngine {...props} /></ChatEngineWrapper>\n    }\n    \n}\n\nexport default ChatEngineApp\n","import React, { useContext, useState } from 'react'\n\nimport { ChatEngineContext } from '../Context'\n\nimport { getChat, getLatestMessages } from 'react-chat-engine'\n\nimport { WebSocket } from 'nextjs-websocket'\n\nconst ChatSocket = props => {\n    const [reconnect, reset] = useState(Date.now() + 10000)\n    const {\n      setConnecting,\n      conn, setConn, setCreds,\n      chats, setChats,\n      messages, setMessages,\n      sendingMessages, setSendingMessages,\n      activeChat, setActiveChat,\n      typingCounter, setTypingCounter,\n    } = useContext(ChatEngineContext)\n\n    // Common Context Handlers\n\n    function onEditChat(chat) {\n        if (chats) {\n            const newChats = {...chats}\n            newChats[chat.id] = chat\n            setChats(newChats)\n        }\n\n        props.onEditChat && props.onEditChat(chat)\n    }\n\n    function onGetChat(chat) {\n        if (activeChat === null) {\n            setActiveChat(chat.id)\n        }\n\n        setChats(_.mapKeys([chat], 'id'))\n    }\n\n    function onConnect(conn) {\n        setConn(conn); setCreds(conn);\n        setConnecting(false)\n    \n        getChat(conn, props.chatID, (chat) => onGetChat(chat))\n    \n        if (Date.now() > reconnect) {\n            getLatestMessages(\n                conn, props.chatID, 45,\n                (id, list) => {\n                    setMessages({...messages, ..._.mapKeys(list, 'id')})\n                }\n            )\n        }\n\n        props.onConnect && props.onConnect(conn)\n    }\n    \n    // Socket Events\n\n    function handleEvent(event) {\n        const eventJSON = JSON.parse(event)\n\n        if (eventJSON.action === 'login_error') {\n            console.log(\n                `Your chat auth credentials were not correct: \\n\n                Project ID: ${props.projectID} \\n\n                Chat ID: ${props.chatID} \\n\n                Access Key: ${props.chatAccessKey}\\n\n                Double check these credentials to make sure they're correct.\\n\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\n            )\n\n            setConn(undefined); setCreds(undefined);\n\n            props.onFailAuth && props.onFailAuth(conn)\n\n        } else if (eventJSON.action === 'edit_chat') {\n            onEditChat(eventJSON.data)\n            \n        } else if (eventJSON.action === 'delete_chat') {\n            const chat = eventJSON.data \n\n            if (chats) {\n                chats[chat.id] = undefined\n                \n                setChats(chats)\n            }\n\n            props.onDeleteChat && props.onDeleteChat(chat)\n\n        } else if (eventJSON.action === 'add_person') {\n            onEditChat(eventJSON.data)\n            \n            props.onAddPerson && props.onAddPerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'remove_person') {\n            onEditChat(eventJSON.data)\n\n            props.onRemovePerson && props.onRemovePerson(eventJSON.data)\n\n        } else if (eventJSON.action === 'new_message') {\n            const { id, message } = eventJSON.data\n\n            if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\n                sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined\n                setSendingMessages(sendingMessages)\n            }\n        \n            if (id === activeChat) {\n                const newMessages = {...messages}\n                newMessages[message.id] = message\n                setMessages(newMessages)\n            }\n\n            props.onNewMessage && props.onNewMessage(id, message)\n\n        } else if (eventJSON.action === 'edit_message') {\n            const { id, message } = eventJSON.data\n            \n            if (id === activeChat) {\n                messages[message.id] = message\n                setMessages(messages)\n            }\n\n            props.onEditMessage && props.onEditMessage(id, message)\n\n        } else if (eventJSON.action === 'delete_message') {\n            const { id, message } = eventJSON.data\n\n            if (id === activeChat) {\n                messages[message.id] = undefined\n                setMessages(messages)\n            }\n\n            props.onDeleteMessage && props.onDeleteMessage(id, message)\n        \n        } else if (eventJSON.action === 'is_typing') {\n            const { id, person } = eventJSON.data\n            let newTypingCounter = {...typingCounter}\n            newTypingCounter = {\n                ...newTypingCounter,\n                [id]: {\n                    ...newTypingCounter[id],\n                    [person]: Date.now()\n                }\n            }\n\n            setTypingCounter(newTypingCounter)\n\n            props.onTyping && props.onTyping(id, person)\n        }\n    }\n\n    function onClose() { setConnecting(true) }\n\n    // Render\n    \n    const {\n        development,\n        publicKey, projectID, \n        chatID, chatAccessKey, \n    } = props \n    \n    const wsStart = development ? 'ws://' : 'wss://'\n    const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\n    const project = publicKey ? publicKey : projectID\n\n    return <WebSocket \n        url={`${wsStart}${rootHost}/chat/?projectID=${project}&chatID=${chatID}&accessKey=${chatAccessKey}`}\n        onOpen={() => onConnect(props)}\n        onClose={onClose.bind(this)}\n        onMessage={handleEvent.bind(this)}\n        reconnectIntervalInMilliSeconds={3000}\n    />\n}\n\nexport default ChatSocket","import React, { Component } from 'react'\n\nimport { stringToColor } from '../../Utilities/colorMapping' \n\n\nexport default class Avatar extends Component {\n    state = { avatar: '' }  \n\n    updateImg() {\n        let { avatar } = this.props\n        avatar = avatar && avatar !== null ? avatar : ''\n        \n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\n            this.setState({ avatar })\n        }\n    }\n\n    componentDidMount() { this.updateImg() }\n\n    componentDidUpdate() { this.updateImg() }\n\n    render() {\n        const { username, is_online } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const text = username ? username.substring(0, 2).toUpperCase() : ''\n        const color = stringToColor(username)    \n                \n        return (\n            <div style={{ width: '48px', height: '48px' }}>\n                <div style={{ height: '0px' }}>\n                    <div \n                        className='ce-avatar'\n                        style={{ \n                            ...styles.avatar, \n                            ...customStyle, \n                            ...{ \n                                backgroundColor: this.state.avatar ? 'white' : color,\n                                backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\n                                backgroundRepeat: 'no-repeat',\n                                backgroundPosition: 'center',\n                                backgroundSize: '48px',\n                            }\n                        }}\n                    >   \n                        <div \n                            className='ce-avatar-text'\n                            style={styles.avatarText}\n                        >\n                            { !this.state.avatar && text }\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    this.props.show_online !== false && \n                    <div\n                        className='ce-avatar-status'\n                        style={{\n                            ...styles.status, \n                            ...{ backgroundColor: is_online ? '#52c41a' : '#f5222d' }\n                        }}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    avatar: {\n        width: '44px',\n        height: '44px',\n        borderRadius: '22px',\n        color: 'white',\n        textAlign: 'center',\n    },\n    avatarText: {\n        color: 'white', \n        paddingTop: '12px', \n        fontSize: '15px', \n        fontWeight: '600'\n    },\n    status: { \n        width: '8px', \n        height: '8px', \n        borderRadius: '100%', \n        border: '2px solid white',   \n    }\n}","import React, { Component } from 'react'\n\nimport { PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\n\nexport default class Button extends Component {\n    state = {\n        hovered: false\n    }\n\n    render() {\n        const { value, icon, theme, style } = this.props\n\n        const customStyle = style ? style : {}\n        const hoverStyle = this.state.hovered ? styles.hoverButton : {}\n        const themeStyle = theme === 'danger' ? styles.dangerButton : styles.button\n\n        return (\n            <button \n                id={this.props.id}\n                type={this.props.type}\n                onClick={() => this.props.onClick && this.props.onClick()}\n                onMouseEnter={() => this.setState({ hovered: true })}\n                onMouseLeave={() => this.setState({ hovered: false })}\n                style={{ ...themeStyle, ...customStyle, ...hoverStyle }}\n                className={`ce-primary-button ${theme === 'danger' ? 'ce-danger-button' : ''}`}\n            >\n\n                { icon === 'plus' && <PlusOutlined /> }\n                { icon === 'send'  && <ArrowUpOutlined /> }\n                { icon === 'delete'  && <DeleteOutlined /> }\n                { icon === 'user-add'  && <UserAddOutlined /> }\n\n                { value && icon ? ` ${value}` : value}  \n\n            </button>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        color: 'white',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: '#1890ff'\n    },\n    dangerButton: {\n        color: 'red',\n        border: 'none',\n        outline: 'none',\n        height: '36px',\n        fontSize: '15px',\n        cursor: 'pointer',\n        padding: '8px 16px',\n        borderRadius: '33px',\n        backgroundColor: 'white',\n        border: '1px solid red',\n    },\n    hoverButton: {\n        opacity: '0.66'\n    }\n}","import React, { Component } from 'react'\n\nexport default class TextInput extends Component {\n    state = {\n        focused: false,\n        value: null\n    }\n\n    componentDidMount() {\n        const value = this.props.default\n        if(value) {\n            const event = {target: {value}}\n            this.props.handleChange(event)\n            this.setState({ value })\n        }\n    }\n\n    render() {\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = this.state.focused ? styles.focusInput : styles.input\n\n        return (\n            // NOTE: You may need to make a div the searchContainer to put icons in...\n            <input \n                id={this.props.id}\n                autoFocus={this.props.autoFocus}\n                className='ce-input ce-text-input'\n                value={this.props.value} \n                placeholder={this.props.label}\n                style={{ ...defaultStyle, ...customStyle }}\n                onBlur={() => {\n                    this.setState({ focused: false });\n                    this.props.onBlur && this.props.onBlur();\n                }}\n                onFocus={() => {\n                    this.setState({ focused: true });\n                    this.props.onFocus && this.props.onFocus();\n                }}\n                type={this.props.type ? this.props.type : \"text\" }\n                onChange={(e) => this.props.handleChange && this.props.handleChange(e)} \n            />\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        fontFamily: 'Avenir',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #d9d9d9',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    },\n    focusInput: {\n        // Sizes\n        height: '36px',\n        fontSize: '15px',\n        fontFamily: 'Avenir',\n        // Border\n        outline: 'none',\n        borderRadius: '24px',\n        border: '1px solid #1890ff',\n        // Padding and fixed width\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n    }\n}","import React, { Component } from 'react'\n\nimport { CloseOutlined } from '@ant-design/icons'\n\nexport default class AutoComplete extends Component {\n    state = {\n        focused: false,\n        showAll: false,\n    }\n\n    onFocus() {\n        this.onChange('', true)\n        this.setState({ focused: true })\n        this.props.onFocus && this.props.onFocus()\n    }\n\n    onBlur() {\n        this.setState({ focused: false })\n        this.props.onBlur && this.props.onBlur()\n    }\n\n    onChange(value, showAll) {\n        this.setState({ showAll })\n        this.props.handleChange && this.props.handleChange(value)\n    }\n\n    getNames() {\n        let count = 0\n        const max = this.props.max ? this.props.max : 3\n        \n        const results = []\n\n        this.props.options.map(option => {\n            if (JSON.stringify(option).toLowerCase().indexOf(this.props.value.toLowerCase()) !== -1 && count < max) {\n                count = count + 1\n                results.push(option)\n            }\n        })\n        \n        return results\n    }\n\n\n    renderOptions() {\n        if(!this.props.value && !this.state.showAll) { return <div /> }\n\n        const results = this.getNames()\n\n        return results.map((option, index) => {\n            return (\n                <div key={`option_${index}`} className='ce-autocomplete-option'>\n                    { this.props.renderOption && this.props.renderOption(option) }\n\n                    { \n                        index === results.length - 1 && \n                        <div \n                            style={styles.close} \n                            className='ce-autocomplete-close'\n                            onClick={() => this.onChange('', false)}\n                        >\n                            <CloseOutlined />\n                        </div>\n                    }\n                </div>\n            )\n        })\n    }\n\n    render() {\n        const { options } = this.props\n        const customStyle = this.props.style ? this.props.style : {}\n        const defaultStyle = { ...styles.input, ...{ border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9' } }\n\n        return (\n            <div>\n                <input \n                    id='ce-add-username-input'\n                    className='ce-input ce-autocomplete-input'\n                    value={this.props.value} \n                    placeholder={this.props.label}\n                    style={{ ...defaultStyle, ...customStyle }}\n                    type={this.props.type ? this.props.type : \"text\" }\n                    onBlur={() => this.onBlur()}\n                    onFocus={() => this.onFocus()}\n                    onChange={(e) => this.onChange(e.target.value, true)}\n                />\n\n                {\n                    options && options.length > 0 && this.state.showAll &&\n                    <div \n                        className='ce-autocomplete-options'\n                        style={{ borderRadius: '19px', border: '1px solid #afafaf', overflow: 'hidden' }}\n                    >\n                        { this.props.options && this.renderOptions() }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    input: {\n        height: '36px',\n        fontSize: '15px',\n        outline: 'none',\n        borderRadius: '24px',\n        padding: '0px 12px',\n        boxSizing: 'border-box',\n        fontFamily: 'Avenir'\n    },\n    close: {\n        cursor: 'pointer',\n        textAlign: 'center',\n        padding: '8px 12px',\n        fontSize: '15px',\n        borderRadius: '24px',\n    }\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function addPerson(props, chatId, userName, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('New Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function removePerson(props, chatId, userName, callback) {\n    axios.put(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { username: userName },\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '../../actions'\nimport { getHeaders } from '../auth'\n\nexport function getOtherPeople(props, chatId, successCallback, errorCallback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/${chatId}/others/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        // Run hook in Axios on GET requests\n        props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data)\n\n        successCallback && successCallback(chatId, response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Fetch Other People Error', error)\n\n        errorCallback && errorCallback()\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function getMyData(props, callback) {\n    axios.get(\n        `${str.getApiUrl(props)}/chats/me/`,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Get Myself Error', error)\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function editMyData(props, data, callback) {\n    axios.patch(\n        `${str.getApiUrl(props)}/chats/me/`,\n        data,\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Edit Myself Error', error)\n    });\n}","import axios from 'axios'\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function leaveChat(props, chatId, callback) {\n    axios.delete(\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\n        { headers: getHeaders(props)}\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {\n        console.log('Delete Person Error', error)\n    });\n}","import axios from 'axios'\n\nimport * as str from '..'\nimport { getHeaders } from '../auth'\n\nexport function isTyping(props, chatId, callback) {\n    axios.post(\n        `${str.getApiUrl(props)}/chats/${chatId}/typing/`,\n        {},\n        { headers: getHeaders(props) }\n    )\n\n    .then((response) => {\n        callback && callback(response.data)\n    })\n    \n    .catch((error) => {});\n}"]},"metadata":{},"sourceType":"module"}